n        t = f[int(1, 3h = [T, U](a: T, b: U)
    f[utable[type_of()](3)
as   *                                                    integer_equals(0, a.load()))
r std.string
    print(): std.string
        self
    other_method(): std.unit
        std.unit_value

impl printable2 for std.unit
    print(lean.false))
assert(s.contains(std.nt(0, 123)
    v: std.string
//you can nest generic functions as expected
let f = [T]()
    [U]()
        [V											   *                       !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f6(boolean.true  [U]()
        [V]()
            helper{T, U, V}
        let tuple = f[std.boolean]()[061]()["test"]()
a_instance = u{t{boolean.true}, "abc", ean
    an,   et inteo