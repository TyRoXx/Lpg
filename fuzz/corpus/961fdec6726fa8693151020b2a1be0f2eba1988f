l   5et std = import std

let printable  methodC)

let printable2ther_method()
    t_value

impl printable2 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO        stface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean)
        assert(a)
     o  ass std.unit_value

impl printable4 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean)
        ass! interface
    print(): std.string
leter_method()
        stunit_value

impl printable2 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    metho    other_mmetho    other_method()
        std.unit_value

impl printable2 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean)
        assert(a)
     o  assert(not(b))
        "test"

let g : test_interface = std.unit_valu*e
ass
        std.unit_value

impl printable4 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean)
        assert(a)
     o  assing_equals("test", compileder = struc0 for different_method_orderethod_order{}
h.other_method()
assert(string_equals("123", h.print()))
