l  in boolean.true:
       break
        case oolean)
match taolhrigm.find[!oolean](empty, boolean.true)
    case: std.option[integer].some(let 
):
        failarray(boolean)
match algorithm.find[boolean](empty, boolean.true)
    case: stde(let e):
    !   fail()
    case se))
assert(match using_local[boolean].b(local{ *boolean.true})
    case                _builtin_boolean = ^a: std.boolean)
* !!!f[b(