let                                     qqqqct
  W     b: boolean

le
let nested = struct
    a: struct
        b: boolean

let conversion_test_                                          .a.a
assert(f(u{t{boolean.true}, "", 1}))

let nested = struct
    a: struct
  W struct
    a: struct
        b: boolean

let conversion_test_                                          .a.a
assert(f(u{t{boolean.true}, "", 1}))

let nested = struct
    a: struct
  W     b: boolean

lersion_tesq_inter   .a.a
assert(f(u{t{boolean.true}, "", 1}))

let nested = sqqqqqqqqqq           
let conversion_tesq_inter   .a.a
assert(f(u{t{boo,ean.trure}, "", 1}))

let nested = struct
            .a.a
assert(f(u{t{boolean.true}, "", 2}))

let nested = struct
    a: struct
  W     b: boolean

let conversion_tesq_inter   .a.a
assert(f(u{t{boo,ean.true}, "", 1}))

let nested = struct
    a: struct
  W     b: boolean

let /  nversface      .a.a
assert(f(u{t{boolean.true}, "", 1}))

let nested = struct
    a: struct
  W     b: boolean

lersion_tesq_inter   .a.a
assert(f(u{t{boolean.true}, "", 1}))

let nested = struct
    a: struct
  W     b: boolederflow:
    ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||    fsion.i.metail()

h