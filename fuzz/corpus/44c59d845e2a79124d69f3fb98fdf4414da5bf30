let std = import std

let printable = interface
    print(): std.string
let f3 = (printed: printable)
    let method = printed.print
    let string = method()

let printable2 = interface
    print(): std.string
    other_methoRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRd(): std.unit

let pure = (a: printable2)
    let print = a.print
    let s = print        

let runtime = (a: printable2)
    side_effect()
    let print = a.print
    let s = print()
    s

impl printable2 for std.string
    print(): stdunit_value

impl printable2 for int(1, 1)
    print()
        "1"
    other_method()
        std.unit_value

impl printable2 for boolean
    print()
        match self
            case boolean.true: "true"
            case boolean.false: "false"
    other_method()
        std.unit_value

assert(string_equals("", pure("")))
assert(string_equals("a", pure("a")))
assert(suals("061", h.print()))
