lL td.unit
    long(): std.unit
    register(): std.unit
    restri   std.unit
    _Alignas(): std.unit
    _Alignof(): std.unit
    _Atomic()  std.unit
    _Bool()                                            = interface
    abs parameter = (const b:oolean, _: boolean, ___: boolean)
letd.unit
    _Atomic()  std.unit
    _Bool(): std.uni.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abs parameter = (const b:oolean, _: bl   gL       e.unit
    const(): std.unit
    continue(): std.unit
    default(): std.unit
    do(): std.unn/t
    union(): std.unit
    unsigned(): std.unit
sstdw_arprinoolean, ___: boolean)
let struct_member = struct
    const: boolean
    _:                                                                          : std.uni.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abs parameter = (const b:oolean, _: boolean, ___: boolean)
let struct_member = struct
    const: boolean
    _: boolean
    ___: boolean
let const = std.un        it_value
let _ = std.unit_value
leprintable2

impl _keywords = interfac
e    :oolean, _: boolean, ___: boolean)
let s  ___: boolean
let conset _ = std.unit_value
leprintable2

impl _keywords = inter= std.boolean
let e = enum
    const(___)
 t std = import std
let option = std.option[itablme3 = "abc"
assert(string_equals("abc", a3.print()))

let test_interface =nt(0, t
  interface
    method(a: boole a  