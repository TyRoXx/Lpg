l      "?olean
    bkolean.false
assert(not(algorithm.any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_predicate)))
assert(not(algorithm.any_of[boolean, type_of(false_predicate)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(false_prmpiedicate)]y.append(boolean.true))
assert(algorithm.any_of[boolean, type_of(true_predort std

let functions asagain.boolean = e

let to_builti   u: int(0, 123)
    v: std.string
/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/you can nest ge.......................  "unit"
  3)
    v: std.string
/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/you can nest ge..........t(string_e     qual  