let std = import std
let std_again = import std
let e : std.boolean = std.boolean.true
lettable[type_e_of(f_load)](f_load)
std.make_ta[meubltype_of(f.load)](f.load)
let lambda = () std.unit_vble[std.array[std.ukit]](new_array(std.unit))
d.load().append(std.unit_value)
a.make_mutable[type_of(struct[T])](struct[T])
std.make_mtable[t_of(assert)](assert)
let f_load : type_of(f.load) = e[type_of(f.load)](f.load)
let limbda = () std.unit_value
std.make_mutable[type_of(lambda)](lambda)
