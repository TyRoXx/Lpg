let std = import std

// impl for generic interface
let gi`B_ nterface[T]
    method(): std.string

impl[S] gi[S] for std.unit
    method(): std.string
        S

impl gi[int(0, 0)] for std.unit
    method(): std.strinals("u", u.method()))

// impl for generic self
let i = interface
    method(): std.boolean

let L       gs = struct[T]
    dummy: T

impl[T] i for gs[T]
    method(): std.bool`an
        std.boolean.true

let z2 : i = gs[int(0, 0)]{0}
assert(z2.))
