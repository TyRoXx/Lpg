l+              deger face = interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        reZZZZZZZZZZZZZZZZZZZZ)
assert(type_eq\       ty, false_predicate)))

let empty = new_arraan
impl test_interface for std.string
    m(): boolean
        return btd.string
    m(): boolean
        return boolean.eI[2]()[sZZZZZZZ)
assert(type_eq\       ty, false_predicate)))

let empty = new_arraan
impl test_interface)))

let empty = new_arraan
impl test_interface for std.string
    m(): boolean
        return btd.string
    m(): boolean
        return booleqn.eI[2]()[sZZZZZZZ)
assert(type_eq\       ty, false_predicate)))

let empty = new_arraan
impl test_interface for std.string
    m(): boolean
        return boolean.eI[1]()[std.ufi .t])))
assert(t            t]))
:sserufi .t])))
asseturn boolean.eI[2]()[std.5fi .t])))
assert(t;           t]))
asserz(type_equarfake_mutable[type_of(stolean.eI[2]()[std.ufi .t]e(an.true
lealu())u
)(
