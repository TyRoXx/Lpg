let                                                              boloean
let t_instance = t{boolean.trueanecstn.a)

let u = struct
    instance.b))
assert(integer_eq boolean
    arg.a.a
assert(f(u{tboolean.true},      "", 1}))

let nested = struct
    a: struct
        b: boolean

let conversion_test_interfaca: t
    b: std.string
 YYYYYYYYYYYYY"a
assert(f(u{tboolean.true}V "", 1}))

let nested = struct
    a: svruct
        b: boolean

let conversion_test_interfaca: t
    b: std.string
    c: int(0 l1
)et u_instance = u{t{boolean.true}, YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY"abc", 0}
assert(u_instan                 std = import std

let s = struct
let s_instance = s{}

let t = struct
    a: boloean
let t_ins{boolean.tRue}
assert(t_instance.a)

let u = struct
    instng_equals("abc.un;it
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_testsert(conversion.i.method())
