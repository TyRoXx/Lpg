l      
>      boolean
    next(): std.uption[linked_list_node]

let finalWnode = struct
    option[linked_list_nodeEEEEUEEEEEEEEEEEEEEEEEEElue(): boolean
        self&value
    ne): std.o!tino[linked_list_nodeEEEEUEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE(): boolean
        self&value
    ne): stEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEinalWnode = struct
    option[link[[[[[[[[[[[[[[[[[[[[[[EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEinalWnode = struct
    option[link[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[ [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[ [[[[[[[[[[[[[[[[ed_list_nodeEEEEUEEEEEEEEEEEEEEEEde = struct
    option[linked_list_nodeEEEEUEEfor std.unit
    a(): generic_se  )                           (                     lfruct
    value: boolean

impl linked_list_node for final_node
    value(): boolean
  h_it] = std.unit_value*/
