a    unti sdd.string
    y: boolean
let multi = enum
    a(single)
    ("def"))))

assert(stss_bistate != (ar b                                                         (test= _single(single.a("def"))))

assert(string_equals("abc", match single.a(make single.a(make_runtime_string("ab              J     )                                      h pass_monostate(monostate.a)
    case monostate.a: boolean.true
)

let bistate = enuintable)
    let method = printed.print
    let string = method()

let printabm
    a
    b
let pass_bistate != (arg: bistate)
    arg
assertle2 = interface
    print(): std.string
    other_method(): st(maboolean.trud.unit

lee
 t pur   ce = ase(