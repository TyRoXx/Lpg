let std = imoolean] = dum                                                                   sion_test_interface = interface
    method(): std.b                     std = import' std

le                           lllllllllllllllllllllll                                                 port std
let option = std.                                                      std = import' st                                                                                               struct
    a: struct
        b: boolean

let conversion_test_interface = interface
    method(): std.b                     std = import' std

le                           lllllllllllllllllllllll                                                 port std
let option = std.                                                      std = import' std

le          oolean.true}, "", 1}))

let nested = struct
    a: struct
        b: boolean

let conversion_test_interface = interface
    method(): std.b                                                    let algorinhm = import algorithm
let std = e)
    case usingray[string])
let c = new_ar            r    ay(string