lIV      et                                                                qqqqqqqqqqqqqq                                  std = import' std

le                                              jjjjjjjjjjjjjjjjjj                                                                std = import' std

le          oolean.true}, "", 0}*)

let nested = struct
    a: struct
        b: boolean

let conversion_test_interface = interface
    method(): std.boolean
impl conversion_test_                                                    .a.a
assert(f(u{t{boolean.true},letlet s "", 1}))

let nested    qqqqqqqqqqqqqq                                  std = import' std

le                                                     g_equals("abc", u_instance.b))
assert(integer_equals(0, u_instance.c))

let f = (arg: u): boolean
    arg                 td = import std

/*use a captured variable in a compile_time context*/      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f2(boolean.true)(                                      arg: u): boolean
    arg                                                                            std = import' std

le          oolean.true}, "", 1}))

let nested = struct
    a: struct
        b: boolean

let conversion_test_interface = interface
    method(): std.)())

/*cepture mu                b                        0     