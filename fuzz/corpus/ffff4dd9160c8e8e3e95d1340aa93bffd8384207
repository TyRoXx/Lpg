l! et sstring_e  quals("ab:def"T return_run0ime_string("def")))

let test_interface = interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.       retur interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[1;]()[std.ufi .t])lement): string_equals(element, "912")
    case std.option[string: boolean)l bon:oufi .t])lement): string_equals(element, "912")
    case std.option[string: boolean)l bon:oa a e
   boole(an.truel
ealu())e
) 
