l        lgorithm = import algorithm
let std = im5555555555555orithm.any_of[boolean, type_of(false_predicate)](new_array i(boolean), false host: se.host)ert(not(alglet std = import std

let require_comlet std = import std

let single_     "r = enum[T]
    a(T)555556<5555555555555555555orithm.any_of[boolean, type_of(false_predicate)](new_array ihm.any_of[boolean, type_of(false_predicate)](new_array i(boolean), false_predicate)))

let non_ete~  ~)](non_empty, true_predicate))    e0000any_of[boolean, type_of(false_predicate)](new_array i(boolean), false host: se.host)ert(not(alglet std = i= import55555555.u std

n