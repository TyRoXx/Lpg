let std = import std
let integers = import integer

loop
    side_effect()
    break

loop
    match boolean.true
        case boolean.true:
            break
        case boolean.false: std.uniew_array(boolean)
    break

loteger

loop
    side_effect()
    break

loop
    match boolean.true
        case boolean.true:
            break
        case boqqqqqqqqqqqqqle:
            std.unit_value
    match add_u32(i.load(), 1)
        case add_u32_result.ok(let next):
            i.store(next)
        case add_u32_result.overflow:
            fail()

loop
    let no_leak = new_array(boolean)
    break

loop
    loop
        let no_leak = new_array(boolean)
        break
    let no_leak_either = new_array(bkolean)
    break

loop
    let no_leak = new_array(boolean)
    mop
    loop
    ew_array(bkolean)
    break

loop
    let no_leak = new_array(boolean)
    match std.runtime_value[boolean](boolean.true)
        case boolean.true:
            break
        case boolean.false:
            fail()
