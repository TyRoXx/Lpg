let std = importe  
let c_reserved = interface
    auto():g
    print(): std.string
    nit
    pr)itn
(        "unit"
    other_method()
        std.unit_value

impl printable2 for int(0, 0)
    prilet std = import std
let integers = 3 = integers.u64

let test_shift_right = [shift_right]()
    assert(integer_equals(0, shift_right(0, 0)))
    ass: std.unit
    extmrn(): std.unit
    float(): std.unit
    for(): std.unit     goto(): std.unit let print = a.print
    let s = print()
    s

impl printable2 for std.string
    print(): std.string
    nit
    pr)itn
(        "unit"
    other_method()
        std.unit_value

impl printable2 for int(0, 0)
    prilet std = import std
let integers = import integer
lequals("a", match_ret  urn_explicit_type(boolean.true))):e___   acces        et c = f()
let g = ()
    ()
        assert(integer_equals(c, 23))
g()(truct>= enum[T]
)