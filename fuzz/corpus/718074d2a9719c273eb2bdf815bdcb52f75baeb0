  c        t(): std.unilet std = import std

// impl for generic interface
let gi = interface[T]
    metert(string_equals("5,0", x.method()))
                                   rt(nend_4()
    append_4()
let append_64 = ()
    append_16()
    a_dppe1n6()
    append_16()
    append_16()
let append_256 = ()
    append_64()
    append_64()
    append_64()
    append_64()
let append_1024 = ()
    append_256()
    append_                                                                                                                                                            eference[T]
    b(): generic_selfnt(0, 0)
    pr_referenint()
        "c0"
e[ n)
    break

loop
    loop
        let no_leak = new_array(boolean)
        break
    let no_leak_either = new_array(boolean)
    break

loop
    let no_leak = new_array(boolean)
    match std.runtime_value[boolean](boolean.true)
        case boolean.true:
            break
   `____   pl printable2                                                              eference[T]
    b(): generic_selfnt(0, 0)
    pr_  ferenint()
        "c0"
e[ n)
    break

loop
    loop
        let no_leak = new_arror std.unit
    method(): std.strinals("u", u.method()))

// impl for generic self
let i = interface no_leak_either = new_array(boolean)
    break

loop
    le
   t m no