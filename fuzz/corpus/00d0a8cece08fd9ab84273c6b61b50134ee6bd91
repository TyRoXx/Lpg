let std = import std

let f = (): std.unit
    f()

let g = (): std.unit
    side_effect()
    let inner = ()
        side_effect()
        g()

let h = (): std.unit
    let inner = ()
        h()

let k = (a: std.boolean): std.string
    side_effect()
    match a
        case std.boolean.true:
            k(std.boolean.false)
        case std.boolean.false:
            "3"
assert(string_equals("3", k(std.boolean.true)))
assert(string_equals("4", k(std.boolean.false)))

let copy_array_boolean = (from: std.array[std.boolean], to: std(std.boolean.true))
let into = new_array(std.boolean)
copy_array_boolean(original, into)
assert(integer_equals(1, lean), new_array(std.boolean))
