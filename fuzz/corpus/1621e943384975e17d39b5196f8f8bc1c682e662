l[       et std         local
())
assert(match using_local[boolean].b(local{boolean.true})
    case using_local[boolean].a(let s):
        boolean.false
    case using_local[boolean].b(let s):
        s.m
    case using_local[boolean].c(let s):
         = ()
        and(boolean.true, boolean.true)
    requ         \', "\\"))
assert(string_equals