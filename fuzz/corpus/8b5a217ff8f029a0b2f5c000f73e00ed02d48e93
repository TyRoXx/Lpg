d   	  lean.true
==================ert(match using_global[boole    produec()
        std.boolean.true
	let a : produproduce())

impl transformer[std.boolean, std.string] for dummy
    transfo  W   
: std.boolean): std.string
        match input
            case std.boolean.true: "tcoduce()
        sd.string] for dummy
=========== ==================================<====================*======================()
 ====<========etr(match using_global[boo;le    p======================================<========etr(match using_global[boole    produce()
        std.boolean.trz]
	let a : produproduce())

impl transformer[std.bosing_struct = enum[T]
    a(T)
    b(std.boolean)
ass==============================<===========  ==============ring` for dummy
=========== ==================================<====================*======================()
 ====<========etr(match using_global[boo;le    produsingmpl transboolean)
ass==============================<============================= for sing_struct = enum[T]
    a,T)
    b(obosdl.tean)
ass===================l transformer[std.bosing_struct = enum[T]
    a(T)
    b(std.boolean)
ass==============================<===========  ==============ring` for dummy
=========== ==================================<====================*======================()
 ====<========etr(match using_global[boo;le    produsingmpl transboolean)
ass==============================<============================= for sing_struct = enum[T]
    a,T)
    b(obosdl.tean)
ass================================================================================<========ert(match using_global[boole    produce()
        std.lean)
ass==============================<=========LB===============================================ert(match using_global[boole    produec()
   roducen, std.string] for dummy
    d.string] for sing_struct = enum[T]
    a(T)=============================================================<========ert(match using_global[boole    produce()
        std.lean)
ass==============================<=========LB===============================================ert(match using_global[boole    produec()
   roducen, std.string] for dummy
    d.string] for sing_struct = enum[T]
    a(T)
    b(std.boolean)
ass==============================<=================================]                         ()
          case  [V](s)t