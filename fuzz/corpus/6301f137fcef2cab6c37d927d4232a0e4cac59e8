lL        import std

let linked_list_node = interface
 EEEEEEEEEEEEEEEEEEEE]
        std.option[linked_list_node].some(self.next)

let list : linked_list_nodeean]

impl generic_self_reference[std.boolean] for std.unit
    a(): generic_self_reference[std.bok   self
    b(): gen  e = struct
    value: boolean

impl linked_list_node for final_node
    value(): boolean
        self.value
    next(): std.option[linalue
    next(): std.option[linked_list_nodeEEEEUEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE]
        std.option[l0inked_list_node].some(self.next)

let list : linked_list_nodeean]

impl generic_self_reference[std.boola ]enfor std.unit
    a():olean]
        se.lf
    b(): generic_self_ran] = std.unit_value
let x1 : generict: linked_list_node

impl linked_list_node for middle_node
    value(): boolean
        self.value
    next(): std.option[linked_list_nodeEEEEUEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE]
        std.option[linked_list_node].some(self.next)

let list : linked_list_nodeean]

impl generic_self_reference[stdE.boola ]enfor std.unit
    a(): generic_self_reference[std.boolean]
        se.lf
      b(): generic_self_raq] = std.unit_value
let x1 : generic_self_reference[std.unit] = std.unit_value*/
