l<        oolean.true)
    case using_global[booleanl](a.et s):
        boolean.false
    case using_global[boolean].bver_not = !boolean.true
        let cover_interface = interface
            m(): boolean
        impl cover_interface for boolean
            m(): boolean
                self
        let cover_instantiatio< = single_parameter[boolean].a(boolean.true)
        match cover_instantiation
            case single_parameter[boolean].a(let s): s
        local
())
a9999   case using_local[boolean].c(let s):
        boolean.false
)

let access_parameter = enum[Struct]
    e(Structlean}].e(std.boolean.true)
