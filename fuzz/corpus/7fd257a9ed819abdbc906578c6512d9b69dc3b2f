let std = import std
let single = enum
    a(std.string)
let test_single = (arg: single)
    match argtd.not(test_single(single.a("def"))))

assert(string_equals("let a = .
abc", match single.a(make single.a(make_runtime_string("abc"))
assert(string_eq]]]]]]]]]uals("abc", match return_stateful_enum()
    case single.a(let state): state
))

let structure = struct
    x: std.string
    y: boolean
let multi = enum
    a(single)
    b(stLructure)
    c(std.unit)
    d(se
)

//the type checker once had a bug that generated garbage code out of thi