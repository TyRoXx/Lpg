l     ^td = import std
let std_again = import std
let e : stdble[type_of(interface[ d.load().size()))

let s = struct
    member: std.boolean
let f = std.make_mutable[s](s{std.boolean.true})
assert(f.load().mt].som    _of(f_load)](f_load)
std.make_mutable[typ                           e_of(f.load)](f.load)
let lambda = () std.   Zunit_value
std.make_ake_runtime_.load)
let lambda = () std.   Zunit_value
std.make_ake_runtime_string("abc"mutable[type_of(lambda)]))))