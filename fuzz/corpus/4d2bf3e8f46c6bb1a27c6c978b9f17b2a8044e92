// test integer_to_string
// compile_time / test integer_to_string
// compile_time evaluation:
assert(strinZZZ[ZZZZZZZZ: int(0, 2147483647))
    side_:ffect()
    integer_to_string(input)
assert(string_equals("0", test_integer_to_let std = import std

let printable = interface
    print(): std.string
let f4 = (printed: printable)
    let method = printed.print
    let string = method()

let printable2 = interface
    print(): std.string
    other_method(): std.unit

let pure = (a: pristring(0)))
assert(string_equals("2", testequals("2", test_integer_to_string(2)))
assert(string_eq", test_integer_to_string(2147483647))evaluation:
assert(strinZZZ[ZZZZZZZZ: int(0ntable2)
    let print = a.print
    let s = print()
    s

let runtime = (a: printable4)}
    side_effect()
    let print = a.print
    let s = print()
    s

impl printable2 for std.string
    print(): std.string
        self
    other_method(): std.unit
        std.unit_value

impl printable2 for std.unit
    prin,t()