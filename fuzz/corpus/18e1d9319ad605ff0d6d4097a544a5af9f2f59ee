l      	 et std = import stdres_values = interface[T]
    method(arg4: std.ansformer = interface[From, To]
    transform(inpufalse"", b.transform(std.    Uethod(arg4: std.ansformer = interface[From, To]
    transform(  inpu): From): T): From):r = interface[From, To]
    transform(  inpu): From): T): Frplstd.ansformer = interface[From, To]
    transform(inpufa    , b.tr)ansform(std.boolean.false)))

le = interface[T]
    Uethod(arg4: std.ansformer = interfacpl producer[s td.boor = interface[From, To]
    transform(inpufalse", b.transform(std.boolean.false)))

let captures_values = interface[T]
    method(arg4: std.ansformer = interface[From, To]
    transfrom(inpu): From): T): From): To

let dummy =           )

impl trm(ins = interface[T]
    Uethod(arg4: std.ansformer = interface[From, To]
    transform(inpu): From): T): From): To

letce()
        std.boolean.true

let a : producer[std.boomplstd.ansformer = interface[From, To]
    transform(inpufa
