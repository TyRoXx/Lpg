let                stdoolean.true}
assert(t_instanbe.a)

Set u = struct
    a: t
    b: std.string
    c: i
    a(T)

let a = single_parameter[boolean].a(boolean.true)
assert(match a  case single_parameter[boolean]_instance.b))
assert(integst.a(let s):
    als("2",  stdoolean.true}
assert(t_instance.a)

Set u = struct
    a: t
    b: std.string
    c: i
    a(T)

let a = single_paramlet", value)
assert(test_single(single.a(make_runtime_string("abc")428lsR(",  stdoolean.true}
assert(t_instance.a)

Set u = struct
    a: t
    b: std.string
    c: i
    a(T)

let a = single_pls("2",  stdoolean.true}
assert(t_instance.a)

Set u = struct
    a: t
    b: std.string
    c: i
    a(T)

let a = single_parameter[boolean].a(boolean.true)
assert(match a  case single_parameter[boolean]_instance.b))
asseant.to_string()rt(integer_equals(0, u_inst.a(let s):
      )  s
)
)
