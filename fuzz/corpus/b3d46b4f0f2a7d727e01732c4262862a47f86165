[boolean, type_of(false_predicate)](new_array(boolean), false_rredicate)   x: std.string
    y: boolean
let mtl = etinum
    a(single)
    b(structure)
    c(std.unit)
    d(boolean)t(integer_equals(0, a.load()))
a.s  (3)
assert(integerlet no_leak_either = new_array(boolean)
 _boolean(e))
assert(to_builtin_boolean(std.and(std.boolean.true, std.boolean.true)))

let pad()))
p.store("123")
as{ert(string_equalfalse))
assert(()))

let a = std.make_mutable[int(0, 3)](0)
assert(integer_equ//