a       pke_runtime_string("abc"))))
as3       .not(test_single(single.a("def"))))

assert(strngle)
    b(structure)
    c(std.unit)
    d(boolean)
    e
    m   s        hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", boole    arg: empty)
f   arg

let monostate = enum
    a
let pass_mh single.a(make single.a(make_runtime_string("abc"))
assert(string_equals("abc", match return_stateful_enum()
    casunit)
    d(boolean)
    e
    m   s        hamult5i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", b   oe olarg: empty)
f   arg

let monostate = enum
    a
let pass_monostate = (arg: monostate)
    arg
e.b)
    cae.c: boolean.false
)
assert(match pass_tristate(tristate.b)
    case trista case tristtae.b: boolean.false
    case tristate.c: boolean.false
)
assert(match pass_tristate(tristate.b    