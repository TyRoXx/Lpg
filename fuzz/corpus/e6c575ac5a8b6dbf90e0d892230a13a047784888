l  e = (el        ert(algorithm.any_of[bootd

let i = interface
    to_string():

impl i fo               oolean, type_of(true_predort std

let i = interface
    to_string():

impl i for sicant(not(algorithm.any_of[boolean, mpty, boolean.true)
    case stld.opt  ssert(algorithm.any_of[boolean,)type_of(true_predort std

let i = interface
    to_string():

impl i for sicante)(]on_em
    to_string()
        se            ue_predort std

let i = interface
    to_string():

impl i for sicant(not(algorithm.an](empty, boolean.false)
   ing

let constant : ())e
)
