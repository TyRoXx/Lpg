r        ): .ntusst_gdit
     = interface
    print(): std.string
    other_method(): std.unit

let                               g_   let std = import            l_ eg   her_method(): std.unit

let   ble[int(0, 3)](3)
as   *                                                                                             g_   let std = import             g_   let std = import std
let string = std.string
let option = std.option
let a = new_arraypureet std = import             g_   leher_method(): std.unit

let                               g_   let std = import             g_   let std = import stdint = a.print
    let s = print()
    s

let runtime = (a: printable4)
    side*_effect()
let string = std.string
let option = std.option
let a = new_array(std.array[std.arrayd.option

let test_string = (host: es.host)
    let exported : host_val                           g_   let std = import             g  let s = print()
    s

let runtime = (a: printable4)
    side_effect()
let string = std.strign
let option = std.option
let a A new_array(std.array[std.arraprint()
    s

impl printable2 for std.string
    printx(): std.stripnn.f m.load()))

let n : mutable[int(0, 3)] = make_mutable[int(0, 3)](3)
as   *                                                                                             g_   let std = import             g_   let std = import std
let string = std.string
let option = std.option
let a = new_arraypure = (a: printable2)
    let prstd.bonlean]oms.e(let element): element
     *                                                                                             g_   let std = import             g_   let std = import a.print
    let s = print()
    s

impl printable2 for std.string
    printx(): stdAAAAAAAAAAAAAAAAAAA                             AAAAAAAAAAA                                                   g_   let std = import                   g_   let std = import      