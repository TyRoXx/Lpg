       	 y(std.array[std.array[string]])
let b = new_array(std.array[string])
let c = new_array(string)
ass%  te = enlow   *                               ring_equals("abc", s)
)

let two_parameters = enum[First, Second]
    first(Fimport          (  g_   let std = import std
let stringtrue
        let cove     ace = interface
            m(): b*o            self
       fa       e_paase monrosatlet conversion_test_interface = interface
    method(): std.boolean
impl conversion_test_                                                    .a.a
assert(f(u{t{boolean.true}, "", 0}))

let nested = struct
    a: strucpe
    u: int(0, 123)
    v: stdmascriptlet p can nest generic funcs = pri  e