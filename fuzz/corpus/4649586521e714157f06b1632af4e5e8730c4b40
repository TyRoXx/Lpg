l   able[type_of(enum[T])](enum[T])
std.make_mutable[stdYstring](" a      teslambda = () std.unit_value
std.make_ake_runtime_string("abc"mutable[type_of(l)
std.make_mutable[type_of(std.option[std.unit].some)](std.option[std.unit].some)
std.make_mutable[type_of(struct[T])](struct[T])
std.make_mut        e_of [])e)
std.make_mutable[type_of(struct[T])](struct[T])
std.make_mut        e_of([]) (TT)]([T]() T)
std.make_mutable[type_of(f_load)](f_load)
std.make_mutable[type_of(f.load)](f.load)
let lambda = () _string("abc"mutable[type_of(l)
std.make_mutable[type_of(std.option[std.unit].some)](std.option[std.unit].some)
std.make_mutable[type_of(structtype_of([]) (TT)]([T]() T)
std.mat")
std.matd.unit_value
std.make_ake_runtim