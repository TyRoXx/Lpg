l     std = import std
let c_resault(): std.unilet std = import std

// impl for generic interface
let gi = interface[T]
    method(): std.string

impl[St_value
assert(string_equals("0,0", x.method()))

let y : gi[int(0, 1)] = std.unit_value
assert(string_equals("0,1", y.method()))

let    default(): std.unilet std = import std

// impl for generic interface
let gi = interface[T]
    method(): std.string

impl[St_value
assstd.string

impl[St_value
assert(let stdstring_equals("0,0", x.method()))rr = import std

// impl for generic interface
let gi = interfacay(boolean)
man)
assert(match using_global[boole            )
    