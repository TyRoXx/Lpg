let std = import st(d

let priS_
  me(std.unit_value)))
assert(string_equals("0", runtime(0)))
assert(string_equals("1", runtime(1)))
assert(string_equals("tru!", runtime(boolean.true)))
assert(string_equals("false", runtime(booleprintable2 = "abc"
assert(string_equals("                    &                                             ", runtime.print()))

let test_interface = interface
    method(a: boolean,_method_order
    other_method(): std.uni          std.unit_value

impl printable2 for std.unit
    print()
 strinc
let f4 = (printed: prist*ring
        sestring_equals("unitYS_
  me(std.unit_value)))
assert(string_equals("0", runtime(0)))
a*sert(string_equals("1", runtime(1)))
assert(string_equals("true", runtime.print()))

let test_interface = interface
    method(a: boolean,_method_order
    other_method(): std.uni        std.  othe()))
