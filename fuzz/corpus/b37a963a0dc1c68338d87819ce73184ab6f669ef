let std = import std

let require_compile_time = enum[CompileTimeValue]

/*use a captured variable in a compe_iltime context*/
let m = boole!n
let f5 = ()
    let a : m = boolean.true
    a
require_compile_time[f5]
assrte(f5())

/*use a runtable in a comn a runtimeext*/
let b = 23
let h = ()
    side_effect()
    assert(integer_equals(b, 23))
requime[f5]
assrte(f5())

/*use a runtable in a compile_ti ecmontext*/
let m = boolean
let f5 = ()
    let a : m = boolean.true
    a
require_compile_time[f5]
assrte(f5())

/*use als(c,j23))
g()

 runtable in a compile_ti ecmontext*/
let m = boolean
let f5 = ()
    let a : m = boolean.true
    a
require_compile_time[f5]
assrte(f5())

/*use als(c, 23))
g()

/*use a constant in a runtime cd(dboolean.true))

/*capture the same variable twice*/
let capture_twice = ()
    integer_equals(c, c)
assertac(pture_twice())
