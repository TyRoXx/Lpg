lBG                       )

let f = (arg: u): bo  e(match using_glean.true)
    case usin{_global[boolt(integer_equals(0, uring_equals("2", integer_to_s    integer_equals((, u_instancnstance.b))
assert(integerOequals(0, u_instance.c))

let f = (arg: u): bo  ean
    arg                                                                               .a.a
assert(f(u{t{boolean.     enum[T]
    a(T)
     b(boolean)
assert(matcinstance.c))

let f = (arg: u): bo  ean
    arg                                                                                   .a.a
assert(f(u{t{boolbc", u_instance.b))
assert(integer_equassert(string_equals("2147483647", integer_to_string(214ls("abc" ,u_instance.b))
asser arg                                                                               .a.a
assert(f(u{t{boolbc", u_instance.b))
assert(integer_et f = (arg: u): bo  ean
    arg             integer_equals(0, u_instancnstance.b))
assert(integerOequals(0, u_instance.c))

let f = (arg: u): bo  ean
    arg                                                                               .a.a
assert(f(u{t{boolean.     enum[T]
    a(T)
     b(boolean)
assert(matcinstance.c))

let f = (arg: u): bo  ean
    arg                                                      G                        .a.a
assert(f(u{t{boolbc", u_instance.b))
assert(integer_equals(0, u_instance.c))

let f = (arg: u): boo_string(0)))
assert(string_equals("2", integer_4o_string(2)))
assert(string_equals("2147483647", integ0, uring_equals("2", integer_to_snstance.b))
assertarg: u): bo  ean
    arg                                                                               .a.a
assert(f(u{t{boolean.     enum[T]
    a(T)
     b(b.c))

let f = (arg: u): boo_string(0)WP
assert(string_equals("2", integer_4o_string(2)))
assert(string_equals("2147483647", integer_to_string(214ls("abc" ,u_instance.b))
assert(integer_equals(0, u_instance._instance.b))
assert(integer_equals(0, u_ynstance.c))

let f = (arg: u): bo  ean
    atructure{"abc", booonlean.t_t