l   
  M_ elfv_       let cover_instantiatio< = single_parameter[boole): boolean
                self
        let c`ver_instantiatio< = single_parameter[boolean].a(boolean.true)
        match cover_instan      let cover_instantiatio< = single_parameter[boole): boolean
                self
          let cover_instantiatio< = single_parameter[boole): boolean
       :         self
        let c`ver_instantiatio< = single_parameter[boolean].a(boolean.true)
        match cover_< instan      let cover_l
    std = implet aue_predort std

let i = interface
    to_string():

impl i for sicante)(]on_em
    to_string()
        se          instantiatio< = single_parameter[bool           match cover_instantd.boolet a : produciation
            case     s.m
    case using_local[boolean].c(let s):
        #   ean.%alse
)

let access_param%ter                             (  er[(): std.unit
    else(): st        = struct
       self
          let cover_instantiatio< = d.unit
    extern(): std.unitsingle_pat s): s
        local
())
as
    serfl