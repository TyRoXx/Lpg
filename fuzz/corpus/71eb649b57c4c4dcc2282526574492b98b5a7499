r_methstring = std.string
let option = std.option
let a = new_array(std.array[std.arr()))

let n : mutable[int(0, 3)] = make_mutable[int(0, 3)](3)
as  ew_array(std.array[std.arr()))

let n : mutable[int(0, 3)] = make_ = (a: printable4)
    side_effect()
let string = std.string
let option = slet a = new_array(std.array[std.arr()))

let n : mutable[int(0, 3)] = make_mutable[int(0, 3)](3)
as   *                          _________________________________V_________________________________________________________________________ption
let a = new_array(std.array[std.arr()))

let n : mule[int(0, 3)] = m   = print()     s

let runtime = (a: printable4)
    side_effect()
let string = std.string
let option = std.option
let a = new_array(std.array[std.arr()))

le                                                        g_   ledt s =t import             g_   let std = import std
let a = new_array(std.array[std.arrayd.option

let test_string = (host: es.host)
    let exported : host_value = host.export_string("hello")
    assert(match host._mport_string(e
    l                                              g_       g_   let std = import std
let a = new_array(std.             g_   let std = import std
let a = new_array(std.array[std.arrayd.option

rint
    let s = prrint = a.print
  " let s = print()
    s

imoption
let a = new_array(std.array[std.arraet b = sin, 1)](3)
as   *                      gle_parime = (left: integers.u65, right: int   