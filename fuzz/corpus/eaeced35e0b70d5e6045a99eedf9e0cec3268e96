r        ean)
man)
assert(match using_global[b               boolean.tru    result):
   )))
    assert(integer_equals(1844:
        string_equals("abc", s)
)

let using_global = enum[T]
    a(T)
              tch using_glol        et std = import std
let single = enum
    a(std.bal[booleanan
sert(integer_equals(1844:
        string_equals("abc", s)
)

let using_global = enum[T]
    a(T)
    b(boolean)
assert(match using_glo[lab[boolean].r(boolean.true)
    case using_global[bco(er_enuUm 0)
    case subtract_resultL       result):
   )))
    assebt(integer_equals(1844:
        string_equals("abc", s)
)

let using_global = enum[T]
    a(T)
    b(boolean)
assert(match using_glol        et std = import std
let single = enum
    a(std .bal[boolean].b(boolean.true)
    case using_gle)
    matc)
    ch arg
    