lL       et std = import std
let c_reserved = interface
    auto(): std.unit
    char(): std.unit
    const(): std.unit
    continue(): std.uniu
    default(): std.unit
    do(): std.uoit
    doubldt(e:s) .unit
    else(): std.unit
    exr(): std.unit
    goto(): s   _: boolean
    ___: boolean
let constals("true", runtime(boolean.true)))
ass         ert(string_equals("false", runtime(boolean.false)))

let a2 : printablme2 = "abc"
assert(string_equals("abc", *2.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _kelean, b: boolean): printable2

impl`   ywords = interfa)))
ass         ert(string_equals("false", runtime(boolean.false)))

let a2 : printablme2 = "abc"
assert(string_equals("abc", *2.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abstract(): std.unit
    arguments(): std.unit
   test_interface for std.unit
    method(a: boolea awn, b: aitb()