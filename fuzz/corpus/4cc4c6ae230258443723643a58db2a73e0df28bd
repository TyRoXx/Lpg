let std = import std
let std_agaiare_equivalent : std_again.boolean = e

let to_builtin_boolean = (a: std.boolean)
    match a
        case std.boolean.true: boolean.truable[type_of(struct[T])](struct[T])
std.make_mutable[type_of([T]() T)]([T]() T)
std.make_mutable[type_of(enum[T])](enum[T])
std.make_mutable[std.string]("test")
std.make_mutable[type_of(assert)](assert)
let f_load : type_of(f.load) = f.load
std.make_mutable[type_of(f_load)](f_load)
std.make_mutable[type_of(f.load)](f.load)
let lambda = () std.unit_avlue
std.make_mutable[type_of(lambda)](lambda)
