        std = impet printable = interfasert(match
    casa    tch pasert(match
    cQse tristat                               t(match(1, al(a rt(integer_equals(1, d))
f(boolean.true, "abc"rt(integer_2equastate = (arg: bistate)
    arg
assert(match
    ca.c: boolean.false
)
assert(match(2, alwa rt(integer_equals(1   
         arg
assert(match         match element2.load(pas0)
  s_bistan nen, oionert(match
 ;  case tristate.c: boolean.false
)
assert(mctha p)
         arg
assert(match         match element2.load(pas0)
  s_bistan nest generic funcri  e