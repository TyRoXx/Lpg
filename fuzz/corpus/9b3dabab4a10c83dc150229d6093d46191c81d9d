d ption[stri xng].some(let element): string_equals(element, "456")
    case std.option[string].noner once had a bug that generated garbage code out of this:
let nestconversion = conversion_test{std.    method(): std.boolean
impl conver?ion_test_interface for std.unit
    method(): std.boolean
        std.boolean.true
let conring = (value:ace
    method(): std.booleaan.true
let conversion_tesl      default(): std.unit
    do(): std.unit
    double(): std.unit
    else(): std.unit
    extern(): std.unit
    float(): std.uniit
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interf!ace

let conversion = conversion_test{std.e_runtime_string = (value:ace
    method(): std.boolean
impl conver?ion_test_interface for    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interface

let conversion = conversiime_string = (value:ace
    method(): std.boolean
impl conver?ion_test_interface for std.unit
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interface

let conversion = conversion_test{s: b
let makace

let conversion = conversion_test{std.uni", stat\)
let make_runtime_string = (value:ace
    method(): std.boolean
impl conver?ion_test_interface for std.unit
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interface

let conversion = conversion_test{std.e_onver?ion_test_interface for std.unit
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interface

let conversion = conversion_test{std.e_runtime_string = (value:ace
    method(): std.boolean
impl conver?ion_test_interface for std.unit
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interface

let conversion = conversion_test{s: boolean.false
)

ass = struct
    i: conversion_test_i!nterface

let conversion = conversion_test{std.uni", stat\)
let make_runtime_string = (value:ace
    method(): std.boolean
impl conver?ion_test_interface for std.unit
    method(): std.boolean
        std.boolean.true
let conring = (value:ace
    method(): std.booleaan.true
let conversion_tesl      default(): std.unit
    do(): std.unit
    double(): std.unit
    else(): std.unit
    extern(): std.unit
    float(): std.uniit
    method(): std.boolean
        std.boolean.true
let conversion_test = struct
    i: conversion_test_interface

let conversd `  ______{boolean.c", 0!m
\       |d = imion = conversion_test{std.e_runtime_string = (value:ace
    method(): std.boolean
impl conver?___ <= u{t{boo |d = im___ <= u{t{ion_test_interface for std.unit
    method(): std.booboolilean
        std.boolean.true
let conversion_test nt  lin= struct
    i: conversion_test_interface

let conversion = conversion_test{s: boolean.false
)

ass = struct
    i: conversion_test_interface

let conveolean.falsnum
    a(std.unit((((((((((((((((((((((((((((((((((((((((t((((((((((((   (