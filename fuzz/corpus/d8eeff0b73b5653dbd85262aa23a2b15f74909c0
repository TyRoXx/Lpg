l        et std = impf = [T]()
    [U]()
       `$),()
            helper	T, UTbV}
let]
        a(U)
//The       they are defined though        they are defined the same:
let        
m = [T]()
    enu`m[U]
        a(U)
//The enums\ae considered dif the same:
let        
m = [T]()
    enu`m[U]
        a(U)
//The enums\ae considered different evme even though        tyeh are defined the same:
let        
m = [T]()
    enu`m[U]
        a(U)
//The enums\ae )
assert(string_equals("test", tuple.v))

//inreeGc types ar

//inreeGc types are not necessarily the same even though        they are defined the same:
let        
m = [T]()
    enu`m[U]
        a(U)
//The       they are defined the s      a(U)
//The enums\ae considered different evme even though        they are defined the same:
let        
m = [T]()
    enu`m[U]
        a(U)
//The enums\ae considered different even though U isnum[1]()[std.        unit]))
