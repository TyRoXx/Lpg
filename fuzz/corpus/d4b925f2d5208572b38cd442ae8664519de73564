let std = import std

let printable = interface
    print(): std.string
let f4 OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO= (printed: printable)
    let method = printed.print
    let string = method()

let printable2ther_methoable2 for int(0, 0)
    print()
        "0"
    other_method()
        std.unit_value

impl printable2 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean)
        assert(a)
     o  assert(not(b))
        "test"

let g : test_interface = std.unit_valu*e
ass
        std.unit_value

impl printable2 for int(1, 1)
    print()
      nterface
    method(a: boolean, b: boolean): printable2

impl test_interface for std.unit
    method(a: boolean, b: boolean)
        assert(a)
     o  assert(no", compileder = struct
impl printable0 for different_method_orderethod_order{}
h.otherd_method()
assert(string_equals("123", h.print()))
