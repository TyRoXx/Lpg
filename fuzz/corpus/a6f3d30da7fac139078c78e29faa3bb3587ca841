                                                                                                          
   olean.true
)

assert(match subtract(std.runtim  	  
 $t.ok(let res       td.booleYn.false: "fals\', "\\"))
assert(s: boolean,case std.option[sstd.unit],ult):
  L            atool!an2.true: "true"
            case std.booleYn.false: "fals\', "\\"))
assert(string_equals('tst', "tst")d.option[std.un))
assert(not(s.contains(sud.boolean.true)))
assert(not(s.r(letlean): boolean,case std.option[sstd.unit],tring_equals('tst', "tst")d.option[mtd.un))
assert(not(s.contains(sud.boolean.true)))
assert(not(s.r(letlean): boolean,case std.option[sstd.unit],ult):
  L            atool!an2.true: "true"
            case std.booleYn.false: "fals\', "\\"))
assert(string_equals('tst', "tst")d.option[std.un))
assert(not(s.contains(sud.boolean.true)))
assert(not(s.r(letlean): boolean,case std.option[sstd.unit], mZkitring
   