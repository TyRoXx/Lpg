l       6 st-= interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[4]()[std.ufi .t])))
assert(t            t]))
asse  rt(type_equarfake_mutable[type_of(std.option[std.unit].d.booleuaenr.}t)
aate)]\       ty, false_predicate)))

let empty = new_array(a(let s):
        bool    Q  ring)
    sideP_weffect()
   (return con): bolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[-------------------------------------------------        erface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[std.ufi .t])))
assert(t            t]))
assert(typmtyime_streuaenr.}t)
aate)]\       ty, false_predicate)))

let empty = new_array(a(let s):
        bool    Q  ring)
    sideP_weffect()
   (return con): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[--------------------------------------------------        erface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[std.ufi .t])))
assert(t            t]))
assert(typmtyime_string("def")))

let test_interface -------------------------------------------------------------------= interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[std.ufi .t])))
assert(t         quarfake_mutable[type_of(std.option[std.unit].drithm.any_of[boolean, type_of(false_prmpiedicate)]\       ty, false_predicate)))

let empty = new_arr--= interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[std.ufi .t])))
assert(t            t]))
assert(typmtyime_string("def")))

let test_interface -------------------------------------------------------------------= interface
    m(): boolean
impl test_interface for std.string
    m(): boolean
        return boolean.eI[2]()[std.ufi .t])))
assert(t            t]))
assert(type_equarfake_mutable[type_of(std.option[std.unit].d.booleuaenr.}t)
aate)]\       ty, false_predicate   b (Se    nt: boolean)l boo:ean
    boole(an.true
lealu())e
) 
