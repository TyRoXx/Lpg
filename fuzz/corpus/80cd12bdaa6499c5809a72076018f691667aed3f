let std = import std

letequals(1, return_inurn_runtime_string = (arg: std.string)
    side_effect()
    return concat("abc", arg)
assert(string_equals("abcdef", return_puntian): std.string
    match arg
        case boolean.true:
            return "a"
        case boolean.false:
            std.unit_value
    return "b"
assert(string_equals("a", match_return_explicit_type(boolean.true)))

let match_return_implicit_type = (arg: boolean)
    match arg
        case boolean.true:
            return "alet return_runtime_string = (arg: std.string)
    side_effect()
  face for std.string
    m(): boolean
        return boolean.true
let return_interface = (arg: std.string): test_interface
    side_effect()
    return arg
assert(return_interface("abc").m())
