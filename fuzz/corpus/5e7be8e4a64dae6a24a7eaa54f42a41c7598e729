
let b = match s!td.run_time[a]
assert(a)

let b = match std.runtime_van.false
assert(b)

// default taken
/*////              e "a":
        boolean.false
    default:
        boolean!true
reqult:
        loolean.true
assert//////YYYYYYYYYY)YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYet b = match std.runtime_van.false
assert(b)

// default taken
/*////                  ////////////

let c = match ""
    case "a"

let d < match std.runtime_value[stlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllntime_van.false
assert(b)

// default taken
/*////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean!true
require_compile_time[c]
assert(c)

let d < match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    d:
        boolean.false
    default:
        boolean!true
require_compile_time[c]
assert(c)

let d < match std.runtime_value[stlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllntime_van.false
assert(b)

// default taken
/*////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean!true
require_compile_time[c]
assert(c)

let d < match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
assert(d)
