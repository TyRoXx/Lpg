port std
let std_again = import std
let e : std.blet std = import std

let printable = interface
<   print(): std.string   letiptnr  = a.print
    let s = print()
    s

let runtime = (a: printable2)
    side_effect()
    let print = a.print
    let s = print()
    s

impl printa                                                                        "?.mr std.unit
    met od((): std.string
        "0,0"

i                                       mpl gi[int    (0, 1)]                    l  et std = import sinteger_equals]OS_  _B ([or]()
    assert(integer_equals]OS_  _B (a: boolean, b: std.string, c: option, d: [[[[[te.b: boooe ([or]()
    assert(intege)_equals]OS_  _B (a: boolean, b: std.string, c: 
 [boole      prd.string
    y: boolean
let m
let bis                                                              ce f option, d: [[[[[te.b: boolean.truor e