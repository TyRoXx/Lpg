let std = import std

let printable = interface
    print(): std.string
let f4 OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO=   rinted: prinEtable)
    let method = printed.print
    let string = method()

let printable2ther_method()
        std.unit_value

impl printable2 for                                                                          int(0, 0)
    print()
        "0"
  method = printed(.print
    l   _tring = method~)

let printable2tpl printable2 for   
        OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO= (printed: printable)
    let method = printed.print
    let string = method()

let printable2ther_method()
        std.unit_value

impl printable2 for                                                                          int(0, 0)
    print()
        "0"
   OOOOOOOO= (printed: printable) e t l
  method = printed.print
    let string = method()

let printable2ther_method()
        std.unit_value

impl printable2 for                                                                          int(0, 0)
    nt = f[int(1, 3h = [T, U]t(invteger_equals(3, b.load())  *                                                    _mutable[int(0, 3)](0)
assert(integer_equals(0, a.load()))
a.store(3)
assert(integer_equals(3, a.load()))
let b = std.make_must_interftable[int(0, 3)](3)
a.store(0)
assert(integerqea_uls(0, a.load()))
asace = std.unit_valu*e
asssert(erst