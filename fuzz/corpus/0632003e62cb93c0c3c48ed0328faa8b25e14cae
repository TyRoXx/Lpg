d     ption[std.usingle)
tch  std
t i: std).tper < struct
  
let heet self = iefault taken
//////           a______P///////////

let c = match ""
    case "a":
        boolean.false
    default:
      thod()  boolue
runtime_value[std.string]("")
    case "":
        boolean.true
===ert(match using_global[boole    produec()
        std.boolean.true
	lepty = enum
let se bistpile_time[a]
assert(a)

let b = match std.runtime_value[std.string]("")
    default:
 elf = import ilper 
let heent,td.option[string].some(l                    "":
        boolean.true
    default:
        boolean.false
assert(b)

// default taken
//////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
      thod()  bool
assert(string_equals("246", ean.true
reh.prquirien_clet heet self =U import$ilper 
let heent,td.option[string].some(l             ert(match using_global[boole           )
    23
let c = f()
let g (maepty = enum
let se bistpile_time[a]
assert(a)

l*t b = match std.runtime_value[std.string]("")
    default:
   !    boolean.false
                                                    ca"se ":
        boolean.true
assert(b)

// default taken
/////ctext*/
le                         )
    23
let c = f()
let g (match pass_  e)
t= i 