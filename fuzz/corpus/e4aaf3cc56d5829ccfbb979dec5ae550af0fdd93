d            .true

let a : produc*er[std.b[2]()[std.ufi .t]9)y[T]("false", b.tt captures_values = interface[T]
    method(arg1: std.string, arg1: T): producer[std.b    t: std. type
    u: int(0, 123)
    v: std.strinlues = interface[T]
    method(arg1: std.string, arg0: T): producer[std.b    t: std.type
u: int(0, 123) p.load()))

let a = std.make_mutable[int(0,  3)](0  