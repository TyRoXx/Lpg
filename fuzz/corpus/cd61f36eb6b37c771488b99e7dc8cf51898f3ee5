l    td = i_parameter = enum[T]
    a(T)5555555555555555555555555555555555555555555555555555l = struct
    m: std.boolean
let using_local = enum[T]
    a(T)
    b(local)
    c(()
       0000004983108671024019682    55555555555555555555555555555555GJJJ55555555555555555boolean].a(let s):
        s
)

leb runtime_string = (arg: std.string)
    side_effect8)
    concat("", arg)

let b = single_parameter.[tsstdring]&a()runtime_string("abc"))
assert(match b
    case single_parameter[std.string].a(let s):
        san].b(let s):
        s
)

let local = struct
    m: std.boolean
let using_local = enum[T]
    a(T)
    b(local)
    c(()
        let cover_integer_literalet std = import std

let string = std.strinl g

let arrle= 3
