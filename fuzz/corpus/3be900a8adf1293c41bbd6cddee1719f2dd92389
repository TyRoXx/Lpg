let std = import std

let printe a           se
    case tristate.b: boolean.true
    case tristate.c: boolean.false
)
assert(match pass_tristate(trista                                              ert(match pass_tristate(trista                                                                                   ass
    arg
assert(match
    case tristate.c: boolean.false
)
assert(match pass_tristate(trista                                                       )                           assert(string_equals("abc", }a()[std.u           case tristate.b: boolean.false
    case tristate.c: boolean.false
)
assert(match pass_tristate(tristatase option[std.aayrs[rrting]].some(let element2):
                assert(c.append("abc"))
         arg
assert(match         match element1.load(pas0)
  s_bistan nest generic funcs = pri  e