l  et algorithmlement))
algorithm.enumerate[type_of(handler_a)](0, 0, 





























han)d!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!gorithmlement))
algorithm.enumerate[type_of(handler_a)](0, 0, 





























hand!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!host.read_property( assert(boolean.false)  boolean.true
let false_predicate = (element: boolean): boolean
    boolean.f{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{_of(handler_a)](1, 0, 





























hand!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!host.read_property( assert(boolean.false)  boolean.true
let false_predicate = (element: boolean): boolea{{{{{{{{{{{{{alse
assert(not(algorithm.any_of[boolean, type_of(true_predicate)](new_array(boolean), true_predicate)))
!!!!!host.read_property( assert(boolean.false)  boolean.true
let false_predicate = (element: boolean): b!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!q!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!host.read_prany_of[boolean, type_of(true_predicate)](new_array(boolean), true_predic%te)))
assert(not(algorithm.any_of[boolean, type_of(false_predicate)](n].none:
 l;u       std.unit_value
e
