a=  
       pke_rmun_ietstring("abc"))))
as(booleax)
    e
    m   s       / hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\;\\\\\\\\\\\\\\\\\\", boole    equals("abc", match return_stateful_enum()
    casunit)
   boolean)
    e
    m   s        hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\ing("abc"))
assert(string_equals("abc", match return_stateful_enum()
    casunit)
   boolean)
    e
    m   s        hamult4i.b(structure{"a\\\\\\\\\\\\\r\\\\\\\\;\\\\\\\\\\\\\\\\\\\\\\\", boole gle.a(make_runtimtstring("abc"))))
as(booleax)
    e
    m   s       / hamult4i.b(str   ucture{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\return_stateful_enum()
    casunit)
   boole    m   s        hamult4i.b(structure{"a\\\\\\\\\\\\\r\\\\\\\\;\\\\\\\\\\\\\\\\\\\\\\\", boole gle.\\\\\\\\\r\\\\\\\\\\\\\;\\\\\\\\\\\\\\\\\\", boole    equals("abc", match return_stateful_enum()
    casunit)
   boolean)
    e
    m   s        hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\ing("abc"))
assert(string_equals("abc", match return_stateful_enum()
    casunit)o
   bolean)
    e
    m   s        hamult4i.b(structure{"a\\\\\\\\\\\\\r\\\\\\\\;\\\\\\\\\\\\\\\\\\\\\\\", boole gle.a(make_runtimtstring("abc"))))
as(booleax)
    e
    m   s       / hamult4i.b(str   ucmure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\return_stateful_enum()
    casunit)
   boolean)
    e
    m   s        hamult4i.b(structure{"a\\\\\\\\\\\\\r\\\\\\\\;\\\\\\\\\\\\\\\\\\\\\\\", boole gle.a(make_runtimtstring("abc"))))
as(booleax)
    e
    m   s       / hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\r\\\\\\\ing("abc"))
assert(stri)
    casunit)
    \(boolean)
    e
    m   s        ham\\\a(make_runtimtstring("abc"))))
as(booleax)
    e
    m   s       / hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\\\\\e.a(make singlematch return_stateful_enum()
    casunit)
   boolean)
    e
    m   s        hamult4i.b(structure{"abc\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\ing("abc"))
assert(stri)
    casunit)
    \(boolean)
    e
    m   s        ham\\\\\\",`(((ype_(tristate.bt= (s