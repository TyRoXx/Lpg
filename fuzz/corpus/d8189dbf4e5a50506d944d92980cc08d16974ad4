l`     et std = imp;rt std
let c_reserved = interface
    auto():                                              t
    continustring

impl[St_value
assert(string_equals("0,0", x.method()))

let y : gi[int(0, 1)] = std.  it_value
assert(string_equals("0,1", y.method()))

let    default(): std.unilet std = import std

// impl for generic interface
let gi = interface[T]
    method(): std.string

impl[St_value
assert(string_equals("0,0", x.method()))

let y : gi[int(0, 1)] = std.unit_value
assert(string_equals("0,1", y.method()))

let z = import std

// impl for generic interface
let gi = interface[T]
    method(t
    do() std.us( str