c x      Mfrue
    case tristate.b: boolean.false
   
 case tristate.c: boolean.false
)
assert(match pass_let   arg.a.a
assert(f(u{t{&   ean.true}, "", 1}))

let nested = struct
    a: struct
        b: boolean

let conversi*n_test_interfaca: t
    b: std.string
    c: int(0, 1)
let u_ice = u{t{boolean.true}, YYYY   YYYYYYYYYYYYYYY"ab     c", ", value)
assert(test_single(single.a(make_runtime_strin"sert    (test_single(single.a(make_runtime_strin"", 0}))

let nested = struct
    a: stu{t{boolea