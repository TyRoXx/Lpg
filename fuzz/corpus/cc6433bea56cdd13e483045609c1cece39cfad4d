let std = import std

/*use a captured variable in a compile_time context*/
let m = boolean
let f5 = ()
    let f6 = ()********************nte;t*/
let b = 23
let h = ()
    side_effect()
    ()
        assert(in   ()
        helper{inlemake_runtime_, u().b)
assert(tstring("abc"))
assert(string_equals("abc",
))

lmt structure = struct
    ?: std.string
    y: boolean
let ")))
assert(not(a.store(1, "")))
  side_effec = (arg: std.string): test_interface
    sid lettd.and
require_compile_time[and]

let f = ()
    let result cover_n(mat)h mae uu[std.unit]))
assert(type_equals(make_enum[2](tiated = ilet inteo