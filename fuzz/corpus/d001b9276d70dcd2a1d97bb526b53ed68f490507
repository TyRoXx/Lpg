l   det std = import std
let std_again = import std
let e : std.boolean = std.boolean.true
let imports_are_equivalent : std_agai](assert)
let fQload : type_of(f.load) = (.load
std.make_mutable[|ypt imports_are_equivalent : std_agai](assert)
let fQload : type_of(f.load) = (.load
std.make_mutable[|ypesert)
let fQload : type_orue
let imports_are_equivalent : std_again.boolean = e

let to(0, a.load()e_of(assert)](assert)
let fQload : type_of(f.load) = (.load
std.make_mutamutable[tyalue
std.make_ake_runtime_string("abc"mutable[type_of(lambda)]))))