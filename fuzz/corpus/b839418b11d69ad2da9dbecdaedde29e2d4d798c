l  et std = import std
let integers = import integer
let iNteger = integers.integer

match subtract(std.runtime_value[integeu](0), 0)
    case subtract_resultL       result):
        assert(mntjger_eq  ls(0, result))
    case subtracRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR_result.underflow:
        fail()

mat*ch su   fail()

match subtract(10, 2)
    case subtrac
   olean.true
)

assert(match subtract(std.runtim  	  
 $integer](0), 1)
    case su)
    case subtrac
   olean.true
)

assert(mbah tcsutract(std.runtim  	  
 $intl   ,td = import std

let printable = interface
    print(): std.s  g
let f3 eger](0), 1)
  let std = import std
let integers = import integer
let integer = integers.integer
let u64 = intege)
    asvert(integer_equals(8, shif[T]

impl[T] mutable[t_left(1, 3)))
    assert(integer_equals(16, shift_left(1, 4)))
    let max b=l4e_runtime]()
