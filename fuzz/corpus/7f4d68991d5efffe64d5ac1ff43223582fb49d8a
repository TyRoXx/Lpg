(   
)
    *)
        assert(integ22
let h = ()
    side_effectype_equals   
(make_enum[2]()[std.unit], make_enum[2]()[std.u                                              d                               nit]et std = import std

let helper = struct
    t: std.type
    u: int(0, 12=)
    v: std.string
//you can nest generic functions as expected
let f = [T](.u             ort std

l%t helper = struct
    t: std.type
 (  u: int(0, 12=)
    v: std.string
//you can nest generi***************************************** = [T]()
    [U]()
        [V]()
         
assert(type_equa   case std.boolean.falparaassert(st    string_equals("abc"   l
)

  let t"o_params("hello