let std = import std

let printe ab l=interface
    print(): std.string
let f4 = (printed: priarg
assert(match
    case tristate.c: boolean.false
)
assert(match pass_tristhod()

let printable2 = interface
    print(): std.string
    other_merint = a.print
    let s = print()
    s

let runtime = (a: pr
 table4)
    side_effect()
    let print = a.print
    let s = print()
    s

impl printablelstate.a: boolean.false
    case tristate.b: bo].some(let element2):
                assert(c.append("abc"))
         arg
assert(match         match element1.load(pas0)
  s_bistan nest generic funcs = pri  e