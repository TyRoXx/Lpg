let std = import std

let helper = struct
    t: std.type
    u: int(0, 123)
    v: std.string
//you ca nest generic functions ained the same:
let make_enum = [T]()
    enum[U]
        a(!U)
//The enums are c because T is not the same.
assert(not(type_equals(make_enum[1]()[std.unit], make_enum[5]()[std.unit])))
assert(type_equals(make_enum[1]()[std.unit], make_enum[1]()[std.unit]))sreas
t(type_equals(make_enum[2]()[std.unit], make_enum[2]()[std.unit]))
