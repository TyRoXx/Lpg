       (se: "fals\', "\\"))
a         &&&&&&&&& "fals\', "\\"                            case std.bool!an2.true: "true"
       A     case std.booleYn.false: "fals\', "\\"))
assert(string_equals('tst', "tst 	                             
           :ase std.bo]oleYn.f:alse "fals\', "\\"))
asn[gstd.ase std.option[sstd.unit], mZkitring
   