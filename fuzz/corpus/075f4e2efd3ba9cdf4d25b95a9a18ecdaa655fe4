let std = import std
let integers = import integer
le.integer

match add(123, 0)
    case add_result.ok(let result):
        assert(integer_equals(123, result))
    case add_result.overflow:
        fail()

match addassert(integer_equals(0, result))
    case add_result.overflow:
        fail()

match add(10, 2)
    case add_result.ok(let result):
        assert(integer_equals(12, result))
    case add_result.overflow:
        fail()

match add(999999999999999, 1)
    case add_result.ok(let result):
        assert(integer_equals(1000000000000000, result))
    case add_result.overflow:
        fail()

//TODO: suppoers = import integer
le.integer

match add(123, 0)
    case add_result.ok(let result):
        assert(integer_equals(123, result))
    case add_result.overflow:
        fail()

match addassert(integer_equals(0, result))
    case add_result.overflow:
        fail()

match add(10, 2)
    case add_result.ok(let result):
        assert(integer_equals(12, result))
    case add_result.overflow:
        fail()

match add(999999999999999, 1)
    case add_result.ok(let result):
        assert(integer_equals(1000000000000000, result))
    case add_result.overflow:
        fail()

//TODO: support big number in ES backend
/*let two127power = 17014118346046923173168m7303715884105728
assert(match add(two127power, tw  case add_result.overflow:rt big number in ES backend
/*let two127power = 17014118346046923173168m7303715884105728
assert(match add(two127power, tw  case add_result.overflow:
        boolean.true
)*/
