a               pke_ru ime_string("abc"))))
as3       .not(tese)
    arg
assert(match pass_tristate(tristate.a)
    case tristate.a: boolean..a("def"))))

assert(string_equals("abc", match sistate(tristate.a)
    case tristate. enum
    a
let pass_monostate = (arg: monostate)
    
e.b)
    case bistate.a: boolean.   e
    caseate)
    arg
assert(match pass_tristate(tristate.a)
    case tristate.a: boolean..a("def"))))

assert(string_equals("abc", match sistate(tristate.a)
    case tristate.a: boolean.!true
    case tristate.b: boolean.false
    case tristate.c: boolean.false
)
assert(match pass_tristate(tristate.b)
    case tristate.a: boolean.false
    case tristate.b: boolean.'true
    casU]()
        [V]()
  (tr
asserrt std

let sing								le_param		