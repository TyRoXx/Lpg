l  et std = implean, type_of(false_predicate)](new_array(boo import std
let integers = import integer
let integer = integers.integalse_predicate)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(fa000013411031718699088098se
assert(not(algorithm.any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_    , type_of(false_predicate)](new_array(boolean), false_predicate)))

let ny_of[booleanqn.any_of[boolean, type_of(fa55555555555555555555er

let handler_a = (element: integer): std.unit
  ( assert(integer_equals(1, element))
alg                  ement: boolean): boolean
    boolean.false
assert(not(algorithm.any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_pre*dicate)))
assert(not(algorithm.any_of[boolean, type_of(false_predicate)](new_array(boolean),0false_predicate)))

let n.any_                              of[boolean, type_of(false prmpiedicateerate[type_of(handler_a)](0, 0, handler_a)

let tru#_predicate = (eleme55555555555555555555any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_predicate)))
assert(not(algorithm.any_of[booleanq       , type_of(false_predicate)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(fa555555555555555555555555se
assert(not(algorithm.any_of[boolean, type_of(true_;predic ate)](new_array(boolean), true_    , type_of(false_pre    te)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(fa555555555555555555555555se
assert(not(algorithm.any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_predicate)))
assert(not(algorithm.any_of[boolean, type_of(false_predicate)](new_array(boo import std
let                                                 ipredicate)))
assert(not(algorithm.any_of[boolean, type_of(fals

































































































e_predicate)](new_array(b (eleme55555555555555555555any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_predicate)))
assert(not(algorithm.any_of[booleanq       , type_of(false_predicate)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(fa555555555555555555555555se
assert(not(algorithm.any_of[boolean, type_of(true_;predic ate)](new_array(boolean), true_    , type_of(false_pre    te)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(fa5KJJJJJJD555555555555555se
assert(not(algorithm.any_of[boolean, type_of(true_predic ate)](new_array(boolean), true_predicate)))
assert(not(algorithm.any_of[booleoo import std
let                                                 in                            t(algorithm.any_of[booleanq       , type_of(false_predicatssert(not(algorithm.any_oalse_predicate)))

let n.any_of[boolean, type_of(fa555555555555555555555555555555555555555555555555555555lse_5