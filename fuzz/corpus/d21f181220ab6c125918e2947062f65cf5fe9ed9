f
assertb.true

let a : ps                             et = printed.print
    let string = method()

let printa
___s___  import std
ble2 = interface
    print(): std.string
    other_method()
/*use: s a bl'e2)
    let print = a.print
    let s = print()
    s

me = (a: printable2)
    side_effect()
    let print = a.print
    let s = print()
    s

impl printable2 for std.string
    print(): stdd.make_mutable[host_value](a)
std.make_mutable[type_of(interface[T])](interface[T])
std.make_mutable[typm_of(std.option[std.unit].some)](std.option[std.unit].some)
std.make_mutable[type_of(se_of([T]() T)]([T]() T)
std.make_mutable[type_of(enum[T])](enum[T])
std.make_mutable[std.stringle in a runtime context*/t(ty(tg, c: option, d: inoption.sconver     std = import m)