lL        = import std

let re    quire_compile_time = enum[CompileTimeValue]

/*use a captured variable in a compile_timlean.true)(ile time*/
let f6 = (a: boolean, b: boolean)
    let indirection = () a
    (c: std.unit, d: std.unit)
        side_effect()
        std.and(indirection(), b)
assert(f6( require_compile_time = enum[CompileTimeValue]

/*use a captured variable in a compile_timlean.true)(ile time*/
let f6 = (a: boolean, b: boolean)
    let indirection = () a
    (c: std.unit, d: std.unit)
        side_effect()
        std.and(indirection(), b)
assert(f6(boolean.true, boolean.true)(std.unit_value, std.unit_value))

/*capture an argument at runtime*/
let f7 = (a: boolean, b: boo  an)
    side_effect()
                         let indireuals(c, c)
assert(capture_twice())
