d     @)
&&&&&&&&&let conversion = conversion_test{std.una", stat\test_single(single.a(make_   runtime_string("abc"))))
assn_test = sttest_interf_test{std.una", stat\test_single(single. W     untime(str{std.una", stat\tes;\test_single(single.a(make_ruNtime_strkng("abc"))))
assert(std.not(test_singleype_of(std.option[std.unit].som[std.un
std.tmake_mutabl