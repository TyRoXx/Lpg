dy    	  lean.true

let a : producer[std.boolean] = mudym{}
assert(a.produce())

impl transformer[std.boolean, std.string] for sing_struct = enuan.true: "true"
            case std.boolean.false: "false"

let b : transformer[std.boolean, std.string]!= dummy{}
ass   produce()
        std.boolean.t;ue
	let a : pstd.string] for dummy
    transfo  W   
: std.boolean): std.string
        match input
            case std.boolean.true: "true"
            case std.boolean.false: "false"

let b : transformer[std.boolean, std.string]!= dummy{}
assert(string_equals("true", b.transform(std.boo u{t{booleanight: int   