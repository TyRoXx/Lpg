l oet std = import std
let c_reserved = interface
    auto(): std.unit
    char$): std.unit
    c ost(): std.unit
    continue(): std.unit
    default(): std.unilet std = import std

// impl for generic t std

// impl for generic interface
let gi = interface[T]
    method(t
    do(): std.unit
    double(): std.unit
    else(): std.unit
    extern(): std.unit
    float(): std.unit
    for(): std.unit
    goto(): std.unit
    if(): std.unit
    inline(): std.unit
    int(): std.unit
    long(): std.unit
    register(): std.unit
    restrict(): std.unit
    short(): std.unit
    signed(): qtdas(): std.unit
    _Alignof(): std.unit
    _Atomic(): std.unit
    _Bool(): std.unit
    _Complex(): std.unit
    _Generic(): std.unit
    _Imaginary(): std.unit
    _Noreturn(): std.unit
    _Static_assert(): std.unit
    _Thread_local(): s  .unit
    _(): std.unit
    ___(): std.unit
let parameter = (const: boolean, _: boolean, ___: boolean)
let struct_mem): std.string

impl[S] gi[S] for stber =d.unit
    method(): g_equals( str