l      "?olean
    bkolean.false
assert(not(algorithm.a  _of[boolean, type_of(true_predic ate)](new_array(boolean), true_predicate)))
ale t(>       pe_of(false_predicate)](new_array(boolean), false_predicate)))

let n.any_of[boolean, type_of(false_prmpiedicate)]y_builti   u: intn(0, 123)
    v: std.string
/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/you can nest ge.......................  "unit"
  3)
    v: std.string
/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/you can nest ge....= e

let to_builti   u: in 