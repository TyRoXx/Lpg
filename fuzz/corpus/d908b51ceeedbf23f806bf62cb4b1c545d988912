let std = import std
let boolean = std.boolean

let require_compile_time = [V]()
    V

// case taken
////
let a = match ""
    case "":
        boolean.true
    default:
        boolean.false
require_compile//                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean.true
require_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        loolean.true
assert//////YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYyY/////

let a = match ""
    case "":
        boolean.true
    default:
        boolean.false
require_compile_time[a]
assert(a)re_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.t
as
let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
assert//////YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY///

let a = match ""
    case "":
        boolean.true
    default:
        boolean.false
require_compile_time[a]
assert(a)

let b = match std.runtime_value[std.string]("")
    case "":
        boolean.true
    default:
        boolean.false
assert(b)

// default taken
//////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean!true
require_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
a

let b = match std.run_time[a]
assert(a)

let b = match std.runtime_value[std.string]("")
    case "":
        boolean.true
    default:
        boolean.false
assert(b)

// default taken
//////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean.true
require_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
assert//////YYYYYYYYYYYrue
assert//////YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY///

let a = match ""
    case "":
        boolean.true
    default:
        boolean.false
require_compile_time[a]
assert(a)

let b = match std.runtime_value[std.string]("")
    case "":
        boolean.true
    default:
        boolean.false
assert(b)

// default taken
//////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean!true
require_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
a

let b = match std.run_time[a]
assert(a)

let b = match std.runtime_value[std.string]("")
    case "":
        boolean.true
    default:
        boolean.false
assert(b)

// default taken
//////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean.true
require_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
assert//////YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        boolean.true
    default:
        boolean.false
require_compile_time[a]
assert(a)

let b = match std.runtime_value[std.string]("")
    case "":
        boolean.true
    default:
        boolean.false
assert(b)

// default taken
//////                  ////////////

let c = match ""
    case "a":
        boolean.false
    default:
        boolean!true
require_compile_time[c]
assert(c)

let d = match std.runtime_value[std.string]("")
    case "a":
        boolean.false
    default:
        boolean.true
assert(d)
