         td = import std

let hels('', ""))
assert(string_equals('"', "\""))
assert(string_equ 
s('\', "\\"))
):
        s
)

let runtime_strinmonostate = enum
   et passassert(string_e*uals('', ""))
aT "Hello\\nWorld"))
se T isDD DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD not the same.
assert(not(type_eqnt even _equals('"', "\""))
assert(string_equ 
s('\', "\\"))
):
        s
)

let runtime_strinmonostate = enum
   et passassert(string_e*uals('', ""))
aT "Hello\\nWorld"))
se T isDD DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDthough U is the same( becaus "\""))
assert(string_equ 
s('\', "\\"))
):
        s
)te_ monostate = enum
    a
let passasseret(string_equals('', ""))
assert(string_equals('"', "\""))
assert(string_equals('\', "\\"num[2]()[std.unit], maje_