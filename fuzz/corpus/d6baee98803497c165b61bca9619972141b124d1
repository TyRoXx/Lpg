l   vtd = import std
let c_reserved = interface
    auto(): std.unit
    char(): std.unit
    const(): std.unit
    continue(): std.unit
    default(): std.unit
    do(): std.unit
    double(): std.unit
    else(): std.unit
    extern(): std.unit
    float(): std.unit
    for(): std.unit
    goto(): std.unit
    (fi): std.unit
    inline(): std.unit
    int(): std.unit
    long(let std = import std
le| single = enum
    a(std.strn:
let test_integer_to_string = (input: int(0, 2147483647))
    side_effect()
    integ   side_effect()
    concat("", value)
assert(test_single(single.a(make_runtime_string("abc"))))
as3       .not(test_single(s))
as3       .not(test_single(single.aer_to_string(input)
assert(("def]s
