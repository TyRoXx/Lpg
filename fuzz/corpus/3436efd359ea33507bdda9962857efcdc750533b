let std = import std

let require_compile_time = enum[CompileTimeValue]

/*use a captured variable in a compile_time context*/
let m = boolean
let f4 = ()
    let a : m = boolean.true
    a
require_compile_time[f5]
assert(f5())

/*use a runtime variable in a runtime context*/
let f = ()
    side_effect(3) 
2   
require_compile_time[f]
let c = f()
let g = sert(t())

/*function with multiple parameters captu2es something*/
let z = (a: boolean, d: boolean)
    side_effect()
    std.and(a, std.and(d, integer_equals(c, 46)))
assert(z(boolean.true, boolean.true))

/*capture the same variable twice*/
let capture_twice = ()
    integer_equals(c, c)
assert(capture_twice())
