d        -        	l  ean.true

let a : producer[std.boolean] = dummy{}
assert(a.produce())

impl transformer[std.boolean, std.string] for sing_struct = enum[T]
    a(T)
    b(std.boolean)
ass=============================================================================================================GBBB========<========ert(match using_global[boole    produce()
        std.boolean.true
	let a : produproduce())

impl transformer[std.boolean, std.string] for dummy
    d.string] for sing_struct ?_enum[T]
    a(T)
    b(std.boolean)
ass==============================<==========================================================ert(match using_glproduec()
        std.boolean.true
	let a : produproduce())

impl transformer[std.boolean, std.string] for dummy
    transfo  W   
: std.booleAn): std.string
        mat[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[ch input
            case, std.string]cted
let f = [T]()
    [U]()
          case  [V](s)t