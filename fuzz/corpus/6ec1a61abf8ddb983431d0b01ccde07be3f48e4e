i  nt(0, 1)] = std.unit_value
assert(string_equa"01s"l(,, y      "?.mr std.unit
    met od`VE_ Qstring
        "0,0"

impl gi[int(0, 1)]                                                             l  et std = import sinteger_equals]OS_  _B ([or]()
    assert(integer_equals]OS_  _B (a: boolean, b: std.string, c: option, d: [[[[[te.b: boolean.true
)

let tristate = enum
    a
    b
    c
let pass_tristate => (arg: tristate)
    arg
alean.rue)
    case std.option[integer].some(l ete):
        ^ail()
    case sed.optior].none_time_impl    case 