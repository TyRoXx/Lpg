let std = import std

//mpl for generic interface
let gi = interface[T]
    method(): std.st


assert(string_equals("z", z.method()))

let u : gi["u"] = std.unit_value
assert(string_equals("u", u.method()))

// impl fo        .boolean

let gs = struct[T]
    dummy: T

impl[T] i for gs[T]
    method(): std.boolean
        std.boolean.true

let z1 : i = gs[int(0, 0)]{0}
assert(z2.method())

let u2 : i = gs[int(5, 1)]{1}
assert(u2.method())
