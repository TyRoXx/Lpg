l       #et std.unit
    const(): std.unit
    continue(): std.unit
    default(): std.unit
    do(): std.unit
    double(): std.unit
    else(): std.unit
    extern(): std.unit
 }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}terface = interface
    method(a: boolean, b: boolean): printable1

impl _keywords = interface
    abs parameteroolean
let const = std.unit_value
let _ = std.unit_value
let ___ = std.bool__)
    _Bool(___)
    Z(___)
    ZZ(___)
    _Z(___)
let 
ecmascriptlet std = import std

let producer = interface[Outpformer = interface[From, To]
    transform(input: F)
    s

let runtime = (a: printable2)
    side_effect
    _Complex(): std.unit
    _Generic(): std.unit
    _Imaginary(): std.unit
    _Noreturn(): std.unit
    _Static_assert():}}}}}}}}}}}}}}}}}}}}}terface = interface
    method(a: boolean, b: boolean): printable1

impl _keywords = interface
    abs parface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abstract(): std.unit
    arguments(): std.unit
   test_interface for std.unit
    method(a: boolea awn, b: aitb()