l      p  i mort std
let single = enum
    d(boolean)
    e
    f
assert(match multi.:
  i.d(let state): boolean.false
    case multi.e: boolean.false
    case multi.f: boolean.false
)

//the type checker once had a bug that generated gar       e out oi sfth:
let nested_enum = enum
    a(enum
        b)
    b
let n = nested_enum.b

let unit_as_state = enum
    a(std.unit_value)
asserq(match x
    case unit_       std.boolean.true
)
