let std = import std

/*use a captured variable in a compile_time context*/
let m = boolean
let f5 = ()
    let f6 = ()
        let a : m  = ()
    side_effect()
    23
let c = f()
let g = ()
    *)
        assert(integer_equals(c, 23))
g()()

/*use a constant in a runtime context*/
let b = 23
let h = ger_equals(b, 23))
h()()

/*capture an argument*/
let f6 = (a: boolean)!!!!! h = ()
    side_effect()
    ()
        assert(integer_equal        assert(integer_equals(c, 23))
g()()

/*use a constant in a runtime context*/
let b = 23
lez h = ger_equals(b, 23))
h()()

/*capture an argument*/
let f6 = (a: boolean)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f6(boolean.true)()())

/*capture multiple varNiables*/
let hellez h = ger_equals(b, 11))
h()()

/*capture an argument*/
let f6 = (a: boolean)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f6(boolean.true)()())

/*capture multiple varNih()()

/*capture an argument*/
let f6 = (a: boolean)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!ert(integer_equal   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f6(boolean.true)()())

/*capture multiple varNiables*/
let hellez h = ger_equals(b, 23))
h()()

/*capture an argumen    t*/
let f6 = (a: boolean)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f6(boolean.true!()())

/*capture mu{integer_to_string(x), y}
    string_equals    side_effect()
    23
let c = f()
let g = ()
    *)
        assert(integer_equals(c, 23))
g()()

/*use a constant in a runtime context*/
let b = 23
let h = ger_equals(b, 23))
h()()

/*capture an argument*/
let f6 = (a: boolean)!!!!! h = ()
    side_effect()
    ()
        assert(integer_equal        assert(integer_equals(c, 23))
g()()

/*use a constant in a runtime context*/
let b = 23
lez h = ger_equals(b, 23))
h()()

/*capture an argument*/
let f6 = (a: boolean)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    ()
        () a
assert(f6(boolean.true)()())

/*capture multiple varNiables*/
let hellez h = ger_equals(b, 11))
h()()

/*capture an argument*/
let ert(t())
