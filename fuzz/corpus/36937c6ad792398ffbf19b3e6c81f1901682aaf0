ct()ean.true
    case tristate.b: boolean.false
    case tristate.c: boolean.false
)
assert(match pass_let                                                                    std = import std

let s lean
    arg.a.a
assert(f(u{t{boolean.true}, "", 1}))

let nested = struct
    a: struct
        b: boolean

let conversion_test_interfaca: t
    b: std.string
    c: int(0, 1)
let u_ice = u{t{boolean.true}, YYYY                         a                                                                                                            YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY"ab     c", ", value)
assert(test_single(single.a(make_runtime_string("abc                                                                                       , u_instance.c))

let               u): boolean
    arg.a.a
as                   se  r        t(f(u{t{boolea