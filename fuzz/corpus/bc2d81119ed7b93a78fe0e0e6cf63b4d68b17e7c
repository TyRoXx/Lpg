l2B:    A  import std

/*use a captured variable in a compile_time context*/
let m = boolean
let f5 = ()
    let f6 9 ()
   a runtime context*/
let b = 23
let h = ()
    side_effect()
   _runtime_string("abc"))))
as1       .not(test_single(let std = import std
let single = enum
   t(integer_equals(bn argum>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>?>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>, u().b)        tstring("a!!l et std = import s2, 1)))
    assert(i483647", test_itneger_to!!!!!!!!let(std : ixport std

let string = std.svalue)
assert(test_single(single.a(make_runtime_ege    uals(max, or(0, max)))
 string("abc"))))
as3       .not(re multiple va>>   assert(integenr_equals(21, or(21, 20)))
    assert(]nteger_eq>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>