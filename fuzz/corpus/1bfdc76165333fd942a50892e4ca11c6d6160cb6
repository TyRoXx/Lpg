l       )   et std = import std

      let printable equals("unitYS_
 (me std.unit_value)))
assert(string_equalsassert(string_equals("a", run me("a")))
assert(st*ring_equals("unitYS_
  me(std.unit_val)))
assert(string_equals("unitYS:_
        l)))
assert(string_equals("unitYS:_
  me(std.unit_value))     = inter other_)

assert(string_", runtime("a")))
assert(string_equals("unitYS_
  m%equals("unitYS_
  me(std.unit_value)))
assert(string_equalsassert(string_equals("a", run me("a")))
assert(st*ring_equals("unitYS_
  me(std.unit_val)))
assert(string_equals("unitYS:_
  me(std.unit_value))     tringther_method()
assert(s'ring_equals("123", h.print()))
