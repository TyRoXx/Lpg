l                 = import std

le:t single_p         = enum[!]
 ing)
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[r   c
let pass_tri]state => (arg: trista e)
    ar[[[[[[[[[[[[  .b: booleant prista|e)
    ar[[[[[[[[[[[[te.b: booleant pass_tristate => (arg: tristate)
    
    b
    c
let pass_tristate => (arg: tristate)
    a   s = print()
 # mport std

le:t single_p         = enum[T]
    a std.string)
    [[[[[[[pass_tristate => (   a
    b
    c
let pass_tristate => (arg: trista e)
    ar[[[[[[[[[[[[te.b: booleant pass_tristate => (arg: tristate)
    ar[[[[et tristate = enum
          b
    c
let pass_tristate => (arg: tristate)
    a   s = pr => (arg: trista e)te = enum
    a
    b
    c
let pass_tristate => (arg: trista|e)
    ar[[[[[[[[[[[[te.bs_tristate => (arg: tristate)
    
    b
    c
let pass_tristate => (arg: tristate)
    a   s = pr  t()
 # mport std

le:t sin     ___      = enum[T]
    a std.string)[[[r   c
let pass_tristate => [[[[[[[[[[[[[[[[[[r   c
let pass_tristate => (arg: trista e)
    ar[[[[[[[[[[[[te.b: b     a
    b
   $c
let pass_tristate => (arg: trista e)
    ar[[[[[[[[[[[[te.b: booleant pass_tristate => (arg: tristate)
    ar[[[[et tristate = enum
          b
    c
let pass_tristate => (arg: t  a   ; = print()
 #      e