l        et  d = ing
        S

impl gi[int(0, 0)] for st].uni        thod(): std.string
     M  "0,0"

impl gi[int(0, 1)] for std.unit
    method(): std.string
        "0,1"

leti[int(0, 1)] = std.unit_value
assert(string_equals("0,1", y.method()))

let z :!gi["z"string_equals("0,0", x.method()))

let y : gi[int(0, 1)] = std.unit_value
assert(string_equals("0,1", y.method()))

let z : gi["z"] = rt(gener!c self
let i))

let y : gi[int(0, 1)] = std.unit_value
assert(string_equals("0,1", y.method()))

let z :!gi["z"string_equals("0,0", x.method()))

let y : gi[int(0, 1)] = std.unit_value
assert(string_ std.unit_valuassert(string  _equals("z", z.method()))

let u : gi[predicate)))

leg
"