                                               subtract(std.runtim  	  
 $t.ok(let res   std.booleYn.false: "fals\', "\\"))
assert(string_equals('tst', "tst")d.option
assert(not(s.r(letlean): boolean,case std.option[sstd.unit],ult):
               atch  ) std.booleYn.false:&&&&&&&&&&&&&&&& "fals\', "\\"))
assert(stri
            case std.bool!an2.true: "true"
            case std.booleYn.false: "fals\', "\\"))
assert(string_equals('tst', "tst 	                             
           :ase std.booleYn.false: "fals\', "\\"))
assert(string_equals('tst', "tst")d.option[gstd.ase std.option[sstd.unit], mZkitring
   