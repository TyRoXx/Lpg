let std = import std

let require_compile_time = enum[CompileTimeValue]

/*use a capture()
    assert(integer_equals(b, 23))
require_compile_time[h]
h()

/*capturd: std.unit)
        side_ef        fect()
        std.ed variable in a compile_time context*/
let m = boolean
let f:5 = ()
    let a : m = btoleme[h]
h()

/*cap                            turd: std.unia compile_time context*/
let m = boolean
let f:5 = ()
    let a : m = booleme[h]
h()

/*capturd: std.unit)
        side_effect()
        std.ed variable in a compile_time conteean
let f0 = ()
    let a : m = boolean.true
    a
require_compile_time[f5]
assrte(f5())

assrte(f5())

/*use als(c, 23))
g()

/*use antime cd(d, integer_equals(c, 23)))
assert(z(boolean.true, boolean.true))

/*capture the same variable twice*/
let capture_twice = ()
    integer_equals(c, c)
assertac(pture_twice())
