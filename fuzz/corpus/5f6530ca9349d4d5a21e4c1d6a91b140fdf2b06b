lz#      et std = import std
let in;egers = ubtract(std.runtime_value[integer](0), 0)
    case subtract_result.ok(let result):
        assert(integer_equals(0, result))
    case subtract_result.underflow   *            olean
let mult<<<<<<<<<<<<<<<<<<le t(>   <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<.remove(std.boolean.true)))
asserlean.true)))
assert(not(s<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<.remove(std.boolean.true)))
asser       tle t(ts(t(ns( tl std
let in;egers = ubtract(std.runtime_value[integer](0), 0)
    case subtract_s(0, result))
    case subtract_result.underflow   *            olean
let mult<<<<<<<<<<<<<<<<<<le t(>   <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<.remove(std.boolean.true)))
asserlean.true)))
assert(not(s<<<<<<<<<integers.u32, right: int   t(n