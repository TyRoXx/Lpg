     array(std.array[std.array[string]])
let b = new_array(std.array[string] = im): string_equals(element, "122")
    case sty(std.array[std.array[string]])
let b = new_array(std.array[string] = im): string_equals(element, "122")
    case stdlet std e)))
assert(not(algorithm.any_of[boolean, type_of(false_pricate)](new_array(boo import stnt: integer): std.unit
  nteger
let integer = integers.integer

let handler_a = (eemlent: integer): std.unit
    assert(inte), true_predicate)))
assert(not(algorithm.any_of[boolean, type_of(false_pricate)](new_array(boo import stnt: integer): std.unit
  nteger
let integer = integers.integer

let handlrt(not(algorithm.any_of[boolean, rray(booleser|(not(algor:ithm.any_of[boolean, typeay(boolean), true_predicate)))
asser|(not(algor:iteger): std.unit
  nteger
let integer = sigit
   Z >omie_ppac(): st
d.uni