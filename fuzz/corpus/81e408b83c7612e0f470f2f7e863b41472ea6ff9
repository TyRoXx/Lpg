a      O>ssert(string_equals('', ""))
assert(string_equals('"', "\""))
assert(string_equ 
s('\', "\\let""""""""""""""""""""""""""""""""""" algorithm = import algorithm
let std = import std
let integers" )
    [U]()
        [V]()
            helper{T, U, V}
        let tuple = fe_runtime_string("abc"))
assert(string_equals("abc", match returk_stateful_enum()
    case sin "abc", state)
let make_runtime_stri)
    arg

let monostatg
assert(match pass_monostate(monostate.a)
    case monostate.a: boolean.true
)

let bistate = eng = (value: std.string)
    side_enum
    a
  ffe ct( b
let)
 p    a