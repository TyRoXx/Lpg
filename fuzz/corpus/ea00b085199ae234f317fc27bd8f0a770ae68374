l    et std = import std

let trivial match arg
       lloOp_returnplicit_typE = (arg: boolean): boolean
    loop 
       return arg
assert(loop = enu = (arg: boolean): boolean
    loop 
       return arg
assert(loop = enum
let pass_e:mpty m
let pass_e:mpty = (arg: se_prmpistd.option[integer].some(leit_type = (arg: boolean): boolean
    loop 
       return arg  ssert(loop = enu = (arg: boolean): boolean
t loOp_return_explicit_type = (arg: boolean): boolean
    loop 
       re]turn arg
assert(loop = enu = (arg: boolean): boolean
    loop 
       return arg
asse 
      mptyan.true)))

lexplicit_type = (arg: boolean): boolean
    loop 
       return arg
assert(loop = enu = (arg: boolrt(loop = enu = (arg: boolean): boolean
    loop 
       return arg
assert(lo     mptyan.true)))

lexplicit_type = (arg: boolean): boolean
    loop 
       return arg
assert(loop = enu = (arg: boolrt(loop = enu = (arg: boolea
lexp()
    imeV]r
lea