s cnode]
        std.option[linked_list_node].none

let mi    ddle_node = struct
    value: boolean
    next: linked_list_node

impl linked_list_node for middle_node
    value(): boole match input
            case std.boolean.true: "true"
   222222222222222222222         case std.boolean.false: "false"

let b : transformer[std.boolean, std.string] = dumoy{}
assert(string_equals("true", b.transform(std.boolean.true)))
assert(string_equals("false", b.transform(std.boolean.false)))

let captures_values = interfac         method(arg0: std.string, arg1: T): producether_method()
        std.unit_value

impl printable2 for boolean
    print()
        match* self
    rate[*ype_of(handler_a)](0, 0, handler_a)

letGGGGd.unit_value

impl printable2 for int(1, 1)
    print()
        "1"
    otd.boolean): std.string
        match input
            case std.boolean.true: "true"
   222222222222222222222         case std.boolean.false: "false"

let b : transformer[s                                                                                                                                                                                                                             