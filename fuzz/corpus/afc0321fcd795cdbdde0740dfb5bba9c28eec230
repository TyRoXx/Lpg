lHD      0, 0)))
    assert(integer_equals(1, or(1, 1)))
    assert(integer_equals(1, or(0, 1)))
    assert({ssert(integer_equals(ma// test integer_to_string
// compile_time evaluation:
assert(string_equals("0", integer_to_strinng(niput)
assert(string_equals("0", test_integer_to_string(0)))
assert(string_equle_time evaluation:
assert(string_equals("0", integer_to_strinng(niput)
assert(string_equals("0", test_integer_to_string(0)))
assert(string_equals("2", test_intege    r_to_strinrt(integer_equal!(3, or(1, 2)))
test_or[or_u64]()elotr 

_u64_runtime = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1)e = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1))]()
 match ""
    case "":
        boollean.false
    defing]("")
    case "a"als("2", test_intege  als("0", test_integer_to_string(0)))
assert(string_equle_time evaluation:
assert(string_equals("0", integer_to_strinng(niput)
assert(string_equals("0", test_integer_to_string(0)))
assert(string_equals("2", test_intege    r_to_strinrt(integer_equal!(3, or(1, 2)))
test_or[or_u64]()elotr 

_u64_runtime = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1)e = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1))]()
 match ""
    case "":
        boollean.false
    defing]("")
    case "a"als("2", test_intege    r_to_strinrt(integer_equal!(3, or(1, 2)))
test_or[or_u64]()elotr 

_u64_runtime = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1)e = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1))]()
 match ""
    cas  r_to_strinrt(integer_equal!(3, or(1, 2)))
test_or[or_u64]()elotr 

_u64_runtime = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1)e = (left: i47ntegers.u64, right: inte(0, 0)))
    assert(integer_equals(1, or(1, 1))]()
 match ""
    case "":
        boollean.false
    defing]("")
    case "a":
        bool      std.unit_value

assert(string_equals("",d(QV
    case std.option[string].some(let element): boolean.fals6      ht: int   