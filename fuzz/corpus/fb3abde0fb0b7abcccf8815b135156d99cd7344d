6        est_or = [or]()
    assert(integer_equals(5, or(0, 0)))
    assert(integer_equals(1, or(1, 1)))
    assert(i
 YYYYYYYY/////

let a = match ""
    caseYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[string case 4: boolean.false

asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYY""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[stri  : blet sets = import   defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case ""YYYYYYYt std
let boose
    default:
        boolean.true
assert//////YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY
let a = match ""
 n[string case 3: boolean.false

asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    caseYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[string case 5: boolean.false

asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYY sets = import   defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case ""YYYYYYYYYYYYt std
let boose
    default:
        boolean.true
assert//////YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY
let a = match ""
 n[strin    case ""YYYYYYYYYYYYYYYYYYYY/////

leboolean.t    default: ! ion[stt  : ! ion[string case 3: boolean.falY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    caseYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[string case 4: boolean.false

asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYY""YYYYYYYYYYYYYYYY
asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

leboolean.t    default: ! ion[stt  : ! ion[string case 3: boolean.falY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    caseYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[string case 4: boolean.false

asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYY""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[strinYY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let aYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

leboolean.t    default: ! ion[stt  : ! ion[string case 3: boolean.falY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    caseYY/////

let a = match ""
    case ""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[string case 4: boolean.false

asser arue
    defaulYYYYYYYYYYYYYYYYYYYYYYYY YYYYYYYYYYYYYYYYYYYYYYYY""YYYYYYYYYYYYYYYYYYYY/////

let a = match ""
    case "":
        bot a = match ""
 n[strinYY YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY/////

let a = matcY       h ""
    case         ""YYYYYYYYYYYYYYYYYYYY/////
