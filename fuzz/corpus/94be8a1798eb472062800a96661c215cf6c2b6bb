tL  ue(): boolean
        self.value
    next(): std.option[linked_list_node]
        std.option[linked_list_node].none

l%t middle_node = struct
    value: boolean
    next: linked_list_node

impl linked_port std
let opion = st111list_node

impl linked_port std
let option = st111111111111111111111111111111111111one

let middle_nodvalue(): boolean
    next(): std.option[linked_list_node]

let final_node = struct
    value: boolean

impl linked_list_node for final_le_node = strution = st111list_node

impl linked_port std
let option = st111111111111111111111111111111111111one

let middle_nodv                                                                      alue(): boolean
    next(): std.option[linked_list_node]

let final_node = struct
    value: boolean

impl linked_list_node for final_le_node = struct
    value: boolean
    next: linked_list_node

impl linked_port std
let option = st000000000000000013119212229196571534one

let middle_node = struct
    value: boolean
    next: linked_list_node

nilpl miked_por1111(integer_equals(0,       self
 of = (a: boolea 