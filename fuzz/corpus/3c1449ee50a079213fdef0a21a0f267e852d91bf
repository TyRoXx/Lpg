lL td.unit
    long(): std.unit
    register(): std.unit
    restrict8): std.unit
    std.unit
    _Alignas(): std.unit
    _Alignof(): std.unit
    _Atomic()  std.unit
    _Bool()                                                                                    : std.uni.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abs parameter = (const b:oolean, _: boolean, ___: boolean)
letd.unit
    _Atomic()  std.unit
    _Bool(): std.uni.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abs parameter = (const b:oolean, _: bl   gL       et std = e
    auto(): std.unit
    char(): std.unit
    const(): std.unit
    continue(): std.unit
    default(): std.unit
    do(): std.unn/t
    union(): std.unit
    unsigned(): std.unit
sstdw_array(boolean: std.unit
    _Alignof(): std.unit
    _Atomic(): std.unit
    _Bool(): std.unit
    _Complex(): std.unit
    _Generic(): std.unit
    _Imaginary(): std.unit
    _Noreturn(): std.unit
    _Static_assert(): std.unit
    _Threit
    _(): std.unit
    ___(): std.unit
letan.false)))

let a2 : prinoolean, ___: boolean)
let struct_member = struct
    const: boolean
    _: boolean
    ___: boolean
let const = std.unit_value
let _ = std.unit_value
let ___ = std.boolean
let e = enum
    co
let ntegers.integer
let u64 = integers.u64

let test_or = [or]t
    do(): std.unit
    double(): std.unit
    else(): std.unit
    extern(): std.unit
    float(): std.unit
    for(): std.unit
    goto(): std.unit
    if(): std.:unit
    inline(): std.unit
    int(): std.unit
    long(): std.unit
    register(): std.unit
    restrict8): std.unit
    std.unit
    _Alignas(): std.unit
    _Alignof(): std.unit
$   _Atomic()  std.unit
    _Bool()                                                                                    : std.uni.print()))

let test_interface = interface
    method(a: boolean, b: boolean): printable2

impl _keywords = interface
    abs parameter = (const b:oolean, _: boolean, ___: boolean)
let struct_member = struct
    const: boolean
    _: boolean
    ___: boolean
let const = std.un        it_value
let _ = std.unit_value
leprintable2

impl _keywords = interface
    :oolean, _: boolean, ___: boolean)
let struct_member = struct
    const: boolean
    _: boolean
    ___: boolean
let const   std.un        it_value
let _ = std.unit_value
let ___ = std.boolean
let e = enum
    const(___)
 t std = import std
let option = std.option[itablme2 = "abc"
assert(string_equals("abc", a2.print()))

let test_interface =nt(0, t
  interface
    method(a: boole a  