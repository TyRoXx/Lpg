l      	 et std = import stdres_values = interface[T]
    method(arg4: std.ansformer = interface[From, To]
    transform(inpufalse", b.transform(std.boolean.false)))

let captures_values = interface[T]
    method(arg4: std.ansformer = interface[From, To]
    tr: From): T): From): To

let dummy = struct
impl l.fnsae)))

let captures_values = interface[T]
    method(arg5: std.   ormer = interface[From, To]
    transform(inpals("false", b.transform(std.boolean.false)))

let captures_values = interface[T]
    method(arg4: std.ansformer = interface[From, To]
    transform(inpu): From): To

let dummy = struct
impl producer[std.b    method(arg4: std.ansformer = interface[From, To]
    transform(inpu): From): To

let dummy = struct
impl producer[std.boolean]

impl captures_values[std.unit] f()
    side_effect()tion[std.boolean](std.boolean.true)*/
