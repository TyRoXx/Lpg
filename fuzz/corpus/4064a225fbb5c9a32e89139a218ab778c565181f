r_method(): .ntusst_gdit
     = interface
    print(): std.string
    other_method(): std.unit

let                               g_   let std = import             g_   let std = import stdint = a.print
    let s = print()
    s

let runtime = (a: printable4)
    side_effect()
let string = std.string
let option = std.option
let a = new_array(std.array[std.arr()))

let n : mutable[i                                                                                  g_   ledt s =t import             g_   let std = import std
let a = new_array(std.array[std.arrayd.option

let test_string = (host: es.host)
    let exported : host_value = host.export_string("hello")
    assert(match host.import_string(e
    l                                              g_   ledt s =t import             g_   let std = import std
let a = new_array(std.array[std.arrayd.option

let test_string = (host: es.host)
    let exportprintable3 for                                 )
let string = std.string
let option = std.option
let a = new_array(std.array[std.arr()))

let n : mutable[i                                                                                    g_   ledt s =t import                       gle_parime = (left: integers.u65, right: int   