u        @        "c0"
e[ n)
h   break

loop
    loop
 :       ce.b))
assert(integer_equals(0, u_instance.c))

let f = (arg: u): boolean
    arg.a.a
assert(f(u{t{boolean.true}, "", 1})et copy_array = [T](from: std.array[T], to: std.afrom.size(), to.size())
                olean
    arg.a.a
assert(f(u{t{boolean.true}, "", 1})et copy_array = [T](from: std.array[T], to: std.afrom.size(), to.size())
        case stl   vtd = import std
let c_reserved =                         `______`           exrg: u): boolean
    arg.a.a
assert(f(u{t{boolean.true})et copy_array = [T](from: std.array[T], to: std.afrom.size(), to.size())
        case st  t(): std.unit
    continue() eric_self_refeqng
   