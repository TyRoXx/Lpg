let single = enum
    a(string-ref)
let test-single = (arg: single)
    match arg
        case single.a(let state):
            side-effect()
            string-equals("abc", state)
let make-runtime-string = (value: string-ref)
    side-effect()
    concat("", value)
assert(test-single(single.a(make-runtime-string("abc"))))
assert(not(test-single(single.a("def"))))

assert(string-equals("abc", match single.a(make-runtime-string("abc"))
    case single.a(let state): state
))

let return-stateful-enum = ()
    side-effect()
    single.a(make-runtime-string("abc"))
assert(string-equals("abc", match return-stateful-enum()
    case single.a(let state): state
))
