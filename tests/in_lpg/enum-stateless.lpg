let empty = enum
let pass-empty = (arg: empty)
    arg

let monostate = enum
    a
let pass-monostate = (arg: monostate)
    arg
assert(match pass-monostate(monostate.a)
    case monostate.a: boolean.true
)

let bistate = enum
    a
    b
let pass-bistate = (arg: bistate)
    arg
assert(match pass-bistate(bistate.a)
    case bistate.a: boolean.true
    case bistate.b: boolean.false
)
assert(match pass-bistate(bistate.b)
    case bistate.a: boolean.false
    case bistate.b: boolean.true
)

let tristate = enum
    a
    b
    c
let pass-tristate = (arg: tristate)
    arg
assert(match pass-tristate(tristate.a)
    case tristate.a: boolean.true
    case tristate.b: boolean.false
    case tristate.c: boolean.false
)
assert(match pass-tristate(tristate.b)
    case tristate.a: boolean.false
    case tristate.b: boolean.true
    case tristate.c: boolean.false
)
assert(match pass-tristate(tristate.c)
    case tristate.a: boolean.false
    case tristate.b: boolean.false
    case tristate.c: boolean.true
)
