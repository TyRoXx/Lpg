let single-parameter = enum[T]
    a(T)

let a = single-parameter[boolean].a(boolean.true)
assert(match a
    case single-parameter[boolean].a(let s):
        s
)

let runtime-string = (arg: string-ref)
    side-effect()
    concat("", arg)

let b = single-parameter[string-ref].a(runtime-string("abc"))
assert(match b
    case single-parameter[string-ref].a(let s):
        string-equals("abc", s)
)

let two-parameters = enum[First, Second]
    first(First)
    second(Second)

let c = two-parameters[boolean, string-ref].second(runtime-string("abc"))
assert(match c
    case two-parameters[boolean, string-ref].first(let s):
        boolean.false
    case two-parameters[boolean, string-ref].second(let s):
        string-equals("abc", s)
)

let using-global = enum[T]
    a(T)
    b(boolean)
assert(match using-global[boolean].b(boolean.true)
    case using-global[boolean].a(let s):
        boolean.false
    case using-global[boolean].b(let s):
        s
)
