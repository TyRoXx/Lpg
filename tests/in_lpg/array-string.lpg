let std = import std

let string = std.string-ref

let array-type = std.array[string]
let a : array-type = new-array(string)
assert(integer-equals(0, a.size()))
assert(not(a.store(0, "")))
assert(not(a.store(1, "")))
assert(not(a.store(2, "")))

assert(match a.load(0)
    case std.option[string].some(let element): boolean.false
    case std.option[string].none: boolean.true
)

assert(a.append("abc"))
assert(integer-equals(1, a.size()))

assert(match a.load(0)
    case std.option[string].some(let element): string-equals(element, "abc")
    case std.option[string].none: boolean.false
)

assert(match a.load(1)
    case std.option[string].some(let element): boolean.false
    case std.option[string].none: boolean.true
)

assert(a.append("456"))
assert(integer-equals(2, a.size()))

assert(match a.load(0)
    case std.option[string].some(let element): string-equals(element, "abc")
    case std.option[string].none: boolean.false
)

assert(match a.load(1)
    case std.option[string].some(let element): string-equals(element, "456")
    case std.option[string].none: boolean.false
)

assert(match a.load(2)
    case std.option[string].some(let element): boolean.false
    case std.option[string].none: boolean.true
)

assert(a.store(0, "123"))
assert(match a.load(0)
    case std.option[string].some(let element): string-equals(element, "123")
    case std.option[string].none: boolean.false
)

assert(a.store(1, "xyz"))
assert(match a.load(0)
    case std.option[string].some(let element): string-equals(element, "123")
    case std.option[string].none: boolean.false
)
assert(match a.load(1)
    case std.option[string].some(let element): string-equals(element, "xyz")
    case std.option[string].none: boolean.false
)

assert(not(a.store(2, "???")))
assert(match a.load(0)
    case std.option[string].some(let element): string-equals(element, "123")
    case std.option[string].none: boolean.false
)
assert(match a.load(1)
    case std.option[string].some(let element): string-equals(element, "xyz")
    case std.option[string].none: boolean.false
)

let big = new-array(string)
let append-1 = ()
    assert(big.append("test"))
let append-4 = ()
    append-1()
    append-1()
    append-1()
    append-1()
let append-16 = ()
    append-4()
    append-4()
    append-4()
    append-4()
let append-64 = ()
    append-16()
    append-16()
    append-16()
    append-16()
let append-256 = ()
    append-64()
    append-64()
    append-64()
    append-64()
let append-1024 = ()
    append-256()
    append-256()
    append-256()
    append-256()
let append-4096 = ()
    append-1024()
    append-1024()
    append-1024()
    append-1024()
append-4096()
assert(integer-equals(4096, big.size()))
